{
    "tables": {
        "projects": {
            "item_1": {
                "uuid": "da4d241f-32b0-4cf1-9211-2f7693038c03",
                "id": 1,
                "createdAt": "2024-12-10 00:51:57",
                "updatedAt": "2024-12-10 02:03:48",
                "settings": {
                    "cssFramework": "tailwind",
                    "uiStarterKit": "jetstream",
                    "usesLivewire": true,
                    "usesInertia": true,
                    "usesVue": true,
                    "usesReact": false,
                    "usesSvelte": false,
                    "isFreshLaravelProject": true,
                    "schemaReaderMode": "db",
                    "schemaReaderDbDriver": "mysql",
                    "schemaReaderDbHost": "127.0.0.1",
                    "schemaReaderDbPort": "3306",
                    "schemaReaderDbUsername": "root",
                    "schemaReaderDbPassword": null,
                    "schemaReaderDbDatabase": "vemto_tes",
                    "laravelVersion": "11.0"
                },
                "canShowSchemaSourceChangesAlert": true,
                "codeGenerationSettings": {
                    "models": true,
                    "factories": true,
                    "seeders": true,
                    "policies": true,
                    "requests": true,
                    "controllers": true,
                    "routes": true,
                    "views": true,
                    "uiComponents": true,
                    "livewireLayout": true,
                    "translationsOnViews": true,
                    "translationsFormat": "underscore"
                },
                "languages": [
                    "en"
                ],
                "defaultLanguage": "en",
                "translations": {
                    "en": {
                        "navigation.home": "Home",
                        "navigation.apps": "Apps",
                        "crud.users.itemTitle": "User",
                        "crud.users.collectionTitle": "Users",
                        "crud.users.inputs.name.label": "Name",
                        "crud.users.inputs.name.placeholder": "Name",
                        "crud.users.inputs.email.label": "Email",
                        "crud.users.inputs.email.placeholder": "Email",
                        "crud.users.inputs.password.label": "Password",
                        "crud.users.inputs.password.placeholder": "Password",
                        "navigation.users": "Users",
                        "crud.formulirs.itemTitle": "Formulir",
                        "crud.formulirs.collectionTitle": "Formulirs",
                        "crud.formulirs.inputs.name.label": "Name",
                        "crud.formulirs.inputs.name.placeholder": "Name",
                        "crud.formulirs.inputs.phone.label": "Phone",
                        "crud.formulirs.inputs.phone.placeholder": "Phone",
                        "crud.formulirs.inputs.institution.label": "Institution",
                        "crud.formulirs.inputs.institution.placeholder": "Institution",
                        "crud.formulirs.inputs.domicile.label": "Domicile",
                        "crud.formulirs.inputs.domicile.placeholder": "Domicile",
                        "crud.formulirs.inputs.event.label": "Event",
                        "crud.formulirs.inputs.event.placeholder": "Event",
                        "crud.formulirs.inputs.image.label": "Image",
                        "crud.formulirs.inputs.image.placeholder": "Image",
                        "navigation.formulirs": "Formulirs"
                    }
                },
                "vthemeKeys": {
                    "default.delay": "opacity-75",
                    "table": "min-w-full divide-y divide-gray-200",
                    "table.container": "overflow-hidden border rounded-lg",
                    "table.head": "bg-gray-50",
                    "table.head.row": "text-gray-500",
                    "table.head.col": "px-5 py-3 text-xs font-medium text-left uppercase",
                    "table.body": "bg-white divide-y divide-gray-200 dark:divide-gray-700",
                    "table.body.row": "text-gray-800",
                    "table.body.col": "px-5 py-4 text-sm whitespace-nowrap",
                    "ui.button": "inline-flex items-center justify-center px-4 py-2 text-sm font-medium tracking-wide text-white transition-colors duration-200 rounded-md bg-indigo-500 hover:bg-indigo-600 focus:ring-2 focus:ring-offset-2 focus:ring-gray-900 focus:shadow-outline focus:outline-none",
                    "ui.input": "inline-flex h-10 px-3 py-2 text-sm bg-white border rounded-md border-gray-300 ring-offset-background placeholder:text-gray-500 focus:border-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 disabled:cursor-not-allowed disabled:opacity-50",
                    "ui.input.checkbox": "",
                    "ui.label": "block mb-1.5 font-medium text-sm text-gray-700",
                    "ui.input.error": "text-sm text-red-600",
                    "ui.breadcrumbs.container": "flex justify-between py-1",
                    "ui.breadcrumbs.list": "inline-flex items-center mb-3 space-x-1 text-xs text-neutral-500 [&_.active-breadcrumb]:text-neutral-600 [&_.active-breadcrumb]:font-medium sm:mb-0",
                    "ui.breadcrumbs.list.item": "",
                    "ui.breadcrumbs.list.item.link": "inline-flex items-center py-1 font-normal hover:text-neutral-900 focus:outline-none",
                    "ui.breadcrumbs.separator": "w-5 h-5 text-gray-400/70",
                    "crud.index.container": "max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4",
                    "crud.table.head.col.extra": "cursor-pointer",
                    "crud.table.head.action-col": "px-5 py-3 text-xs font-medium text-right uppercase",
                    "crud.table.body.col.extra": "max-w-xs truncate",
                    "crud.table.body.action-col": "px-5 py-4 text-sm font-medium text-right whitespace-nowrap space-x-2",
                    "crud.action-link": "text-indigo-600 hover:text-indigo-700 cursor-pointer",
                    "crud.action-link-danger": "text-red-600 hover:text-red-700 cursor-pointer",
                    "crud.index.tools": "flex justify-between align-top py-4",
                    "crud.pagination.container": "mt-2",
                    "crud.container": "max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4",
                    "crud.header": "w-full text-gray-500 text-lg font-semibold py-4 uppercase",
                    "crud.form": "w-full mb-0",
                    "crud.form.container": "overflow-hidden border rounded-lg bg-white",
                    "crud.form.inputs.container": "p-6 space-y-3",
                    "crud.form.input.group": "w-full",
                    "crud.form.input.radio.group": "flex flex-wrap flex-col gap-2",
                    "crud.form.input.radio.box": "inline-flex justify-start gap-2",
                    "ui.input.radio": "!w-4 !h-4 text-indigo-600 transition duration-150 ease-in-out border-gray-300 rounded-md focus:ring-indigo-500",
                    "crud.form.input.extra": "w-full",
                    "crud.form.input.image": "object-cover rounded border border-gray-200 w-36 h-36 cursor-pointer bg-gray-50 hover:opacity-75 transition duration-100 ease-in-out",
                    "crud.form.input.image.button": "p-0.5 px-1 text-xs border border-gray-200 rounded hover:bg-gray-200",
                    "crud.form.input.file.name": "text-sm text-gray-500 p-1 rounded-sm bg-gray-50 border border-gray-200 mb-1",
                    "crud.form.buttons-container": "flex justify-between mt-4 border-t border-gray-50 p-4"
                },
                "vthemeCdn": "https://cdn.tailwindcss.com",
                "connectionFinished": true,
                "canIgnoreNextSchemaSourceChanges": false,
                "filesQueueStatus": "idle",
                "currentSchemaError": null,
                "currentSchemaErrorStack": null,
                "lastReadSchemaDataHash": "72b5f13cef4dd8e8ac424e06f93c2210",
                "currentRenderedFilesPaths": [
                    "/lang/en//navigation.php",
                    "/lang/en//crud.php",
                    "resources/views/components/ui//toast.blade.php",
                    "resources/views/components/ui//action/danger.blade.php",
                    "resources/views/components/ui//action/index.blade.php",
                    "resources/views/components/ui//breadcrumbs/index.blade.php",
                    "resources/views/components/ui//breadcrumbs/link.blade.php",
                    "resources/views/components/ui//breadcrumbs/separator.blade.php",
                    "resources/views/components/ui//button/danger.blade.php",
                    "resources/views/components/ui//button/index.blade.php",
                    "resources/views/components/ui//card/body.blade.php",
                    "resources/views/components/ui//card/header.blade.php",
                    "resources/views/components/ui//card/index.blade.php",
                    "resources/views/components/ui//card/title.blade.php",
                    "resources/views/components/ui//container/table.blade.php",
                    "resources/views/components/ui//input/checkbox.blade.php",
                    "resources/views/components/ui//input/color.blade.php",
                    "resources/views/components/ui//input/date.blade.php",
                    "resources/views/components/ui//input/date-time.blade.php",
                    "resources/views/components/ui//input/email.blade.php",
                    "resources/views/components/ui//input/error.blade.php",
                    "resources/views/components/ui//input/file.blade.php",
                    "resources/views/components/ui//input/hidden.blade.php",
                    "resources/views/components/ui//input/image.blade.php",
                    "resources/views/components/ui//input/index.blade.php",
                    "resources/views/components/ui//input/number.blade.php",
                    "resources/views/components/ui//input/password.blade.php",
                    "resources/views/components/ui//input/radio.blade.php",
                    "resources/views/components/ui//input/select.blade.php",
                    "resources/views/components/ui//input/text.blade.php",
                    "resources/views/components/ui//input/textarea.blade.php",
                    "resources/views/components/ui//input/time.blade.php",
                    "resources/views/components/ui//input/url.blade.php",
                    "resources/views/components/ui//label/index.blade.php",
                    "resources/views/components/ui//modal/confirm.blade.php",
                    "resources/views/components/ui//modal/index.blade.php",
                    "resources/views/components/ui//table/action-column.blade.php",
                    "resources/views/components/ui//table/action-header.blade.php",
                    "resources/views/components/ui//table/column.blade.php",
                    "resources/views/components/ui//table/header.blade.php",
                    "resources/views/components/ui//table/image.blade.php",
                    "resources/views/components/ui//table/index.blade.php",
                    "resources/views/components/ui//table/row.blade.php",
                    "resources/views/partials/app-menu.blade.php",
                    "resources/views/partials/app-responsive-menu.blade.php",
                    "routes/app.php",
                    "routes/app-api.php",
                    "bootstrap/app.php",
                    "database/factories/MembershipFactory.php",
                    "database/seeders/MembershipSeeder.php",
                    "app/Policies/MembershipPolicy.php",
                    "database/factories/TeamFactory.php",
                    "database/seeders/TeamSeeder.php",
                    "app/Policies/TeamPolicy.php",
                    "database/factories/TeamInvitationFactory.php",
                    "database/seeders/TeamInvitationSeeder.php",
                    "app/Policies/TeamInvitationPolicy.php",
                    "database/factories/UserFactory.php",
                    "database/seeders/UserSeeder.php",
                    "app/Policies/UserPolicy.php",
                    "database/factories/FormulirFactory.php",
                    "database/seeders/FormulirSeeder.php",
                    "app/Policies/FormulirPolicy.php",
                    "resources/views/livewire/dashboard/users/index.blade.php",
                    "app/Livewire/Dashboard/UserIndex.php",
                    "resources/views/livewire/dashboard/users/create.blade.php",
                    "app/Livewire/Dashboard/UserCreate.php",
                    "resources/views/livewire/dashboard/users/edit.blade.php",
                    "app/Livewire/Dashboard/UserEdit.php",
                    "app/Livewire/Dashboard/Users/Forms/CreateForm.php",
                    "app/Livewire/Dashboard/Users/Forms/UpdateForm.php",
                    "resources/views/livewire/dashboard/formulirs/index.blade.php",
                    "app/Livewire/Dashboard/FormulirIndex.php",
                    "resources/views/livewire/dashboard/formulirs/create.blade.php",
                    "app/Livewire/Dashboard/FormulirCreate.php",
                    "resources/views/livewire/dashboard/formulirs/edit.blade.php",
                    "app/Livewire/Dashboard/FormulirEdit.php",
                    "app/Livewire/Dashboard/Formulirs/Forms/CreateForm.php",
                    "app/Livewire/Dashboard/Formulirs/Forms/UpdateForm.php",
                    "database/seeders/DatabaseSeeder.php",
                    "resources/views/components/layouts/app.blade.php"
                ]
            },
            "__tableData": {
                "count": 1,
                "lastPrimaryKey": 1,
                "index": {
                    "1": {
                        "hasMany": {
                            "tables.projectId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12,
                                13,
                                15
                            ],
                            "models.projectId": [
                                1,
                                2,
                                3,
                                4,
                                7
                            ],
                            "relationships.projectId": [
                                1
                            ],
                            "app_sections.projectId": [
                                1,
                                2,
                                3,
                                4
                            ],
                            "schema_sections.projectId": [
                                1,
                                2,
                                3
                            ],
                            "navs.projectId": [
                                1,
                                2,
                                3,
                                4
                            ],
                            "renderable_files.projectId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12,
                                13,
                                14,
                                15,
                                16,
                                17,
                                18,
                                19,
                                20,
                                21,
                                22,
                                23,
                                24,
                                25,
                                26,
                                27,
                                28,
                                29,
                                30,
                                31,
                                32,
                                33,
                                34,
                                35,
                                36,
                                37,
                                38,
                                39,
                                40,
                                41,
                                42,
                                43,
                                44,
                                45,
                                46,
                                47,
                                48,
                                49,
                                50,
                                51,
                                52,
                                53,
                                54,
                                55,
                                56,
                                57,
                                58,
                                59,
                                60,
                                61,
                                62,
                                63,
                                64,
                                65,
                                66,
                                67,
                                68,
                                69,
                                70,
                                71,
                                72,
                                73,
                                74,
                                75,
                                76,
                                77,
                                78,
                                79,
                                80,
                                81
                            ],
                            "cruds.projectId": [
                                1,
                                2
                            ],
                            "routes.projectId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            }
        },
        "tables": {
            "item_1": {
                "projectId": 1,
                "name": "cache",
                "migrations": [
                    {
                        "migration": "C:\\Users\\save\\Documents\\projectLaravel\\tts/database/migrations/0001_01_01_000001_create_cache_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000001_create_cache_table.php",
                        "migrationName": "0001_01_01_000001_create_cache_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000001",
                        "createdTables": [
                            "cache",
                            "cache_locks"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "cache",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\save\\Documents\\projectLaravel\\tts/database/migrations/0001_01_01_000001_create_cache_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000001_create_cache_table.php",
                            "migrationName": "0001_01_01_000001_create_cache_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000001",
                            "createdTables": [
                                "cache",
                                "cache_locks"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 1,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16",
                "positionX": 0,
                "positionY": 0,
                "sectionId": 2,
                "removed": false
            },
            "__tableData": {
                "count": 14,
                "lastPrimaryKey": 15,
                "index": {
                    "1": {
                        "hasMany": {
                            "columns.tableId": [
                                1,
                                2,
                                3
                            ],
                            "indices.tableId": [
                                1
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "columns.tableId": [
                                4,
                                5,
                                6
                            ],
                            "indices.tableId": [
                                2
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {
                            "columns.tableId": [
                                7,
                                8,
                                9,
                                10,
                                11,
                                12,
                                13
                            ]
                        }
                    },
                    "4": {
                        "hasMany": {
                            "columns.tableId": [
                                14,
                                15,
                                16,
                                17,
                                18,
                                19,
                                20,
                                21,
                                22,
                                23
                            ],
                            "indices.tableId": [
                                3
                            ]
                        }
                    },
                    "5": {
                        "hasMany": {
                            "columns.tableId": [
                                24,
                                25,
                                26,
                                27,
                                28,
                                29,
                                30
                            ]
                        }
                    },
                    "6": {
                        "hasMany": {
                            "columns.tableId": [
                                31,
                                32,
                                33
                            ]
                        }
                    },
                    "7": {
                        "hasMany": {
                            "columns.tableId": [
                                34,
                                35,
                                36
                            ],
                            "indices.tableId": [
                                4
                            ]
                        }
                    },
                    "8": {
                        "hasMany": {
                            "columns.tableId": [
                                37,
                                38,
                                39,
                                40,
                                41,
                                42,
                                43,
                                44,
                                45,
                                46
                            ],
                            "indices.tableId": [
                                5
                            ]
                        }
                    },
                    "9": {
                        "hasMany": {
                            "columns.tableId": [
                                47,
                                48,
                                49,
                                50,
                                51,
                                52
                            ],
                            "indices.tableId": [
                                6
                            ]
                        }
                    },
                    "10": {
                        "hasMany": {
                            "columns.tableId": [
                                53,
                                54,
                                55,
                                56,
                                57,
                                58
                            ],
                            "indices.tableId": [
                                7,
                                8
                            ],
                            "models.tableId": [
                                3
                            ]
                        }
                    },
                    "11": {
                        "hasMany": {
                            "columns.tableId": [
                                59,
                                60,
                                61,
                                62,
                                63,
                                64
                            ],
                            "indices.tableId": [
                                9
                            ],
                            "models.tableId": [
                                1
                            ]
                        }
                    },
                    "12": {
                        "hasMany": {
                            "columns.tableId": [
                                65,
                                66,
                                67,
                                68,
                                69,
                                70
                            ],
                            "indices.onTableId": [
                                8
                            ],
                            "models.tableId": [
                                2
                            ]
                        }
                    },
                    "13": {
                        "hasMany": {
                            "columns.tableId": [
                                71,
                                72,
                                73,
                                74,
                                75,
                                76,
                                77,
                                78,
                                79,
                                80,
                                81,
                                82,
                                83
                            ],
                            "models.tableId": [
                                4
                            ],
                            "cruds.tableId": [
                                1
                            ]
                        }
                    },
                    "15": {
                        "hasMany": {
                            "columns.tableId": [
                                93,
                                94,
                                95,
                                96,
                                97,
                                98,
                                99,
                                100,
                                101
                            ],
                            "models.tableId": [
                                7
                            ],
                            "cruds.tableId": [
                                2
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "projectId": 1,
                "name": "cache_locks",
                "migrations": [
                    {
                        "migration": "C:\\Users\\save\\Documents\\projectLaravel\\tts/database/migrations/0001_01_01_000001_create_cache_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000001_create_cache_table.php",
                        "migrationName": "0001_01_01_000001_create_cache_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000001",
                        "createdTables": [
                            "cache",
                            "cache_locks"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "cache_locks",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\save\\Documents\\projectLaravel\\tts/database/migrations/0001_01_01_000001_create_cache_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000001_create_cache_table.php",
                            "migrationName": "0001_01_01_000001_create_cache_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000001",
                            "createdTables": [
                                "cache",
                                "cache_locks"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 2,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16",
                "positionX": 0,
                "positionY": 0,
                "sectionId": 2,
                "removed": false
            },
            "item_3": {
                "projectId": 1,
                "name": "failed_jobs",
                "migrations": [
                    {
                        "migration": "C:\\Users\\save\\Documents\\projectLaravel\\tts/database/migrations/0001_01_01_000002_create_jobs_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000002_create_jobs_table.php",
                        "migrationName": "0001_01_01_000002_create_jobs_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000002",
                        "createdTables": [
                            "jobs",
                            "job_batches",
                            "failed_jobs"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "failed_jobs",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\save\\Documents\\projectLaravel\\tts/database/migrations/0001_01_01_000002_create_jobs_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000002_create_jobs_table.php",
                            "migrationName": "0001_01_01_000002_create_jobs_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000002",
                            "createdTables": [
                                "jobs",
                                "job_batches",
                                "failed_jobs"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 3,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16",
                "positionX": 0,
                "positionY": 0,
                "sectionId": 2,
                "removed": false
            },
            "item_4": {
                "projectId": 1,
                "name": "job_batches",
                "migrations": [
                    {
                        "migration": "C:\\Users\\save\\Documents\\projectLaravel\\tts/database/migrations/0001_01_01_000002_create_jobs_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000002_create_jobs_table.php",
                        "migrationName": "0001_01_01_000002_create_jobs_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000002",
                        "createdTables": [
                            "jobs",
                            "job_batches",
                            "failed_jobs"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "job_batches",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\save\\Documents\\projectLaravel\\tts/database/migrations/0001_01_01_000002_create_jobs_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000002_create_jobs_table.php",
                            "migrationName": "0001_01_01_000002_create_jobs_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000002",
                            "createdTables": [
                                "jobs",
                                "job_batches",
                                "failed_jobs"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 4,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16",
                "positionX": 0,
                "positionY": 0,
                "sectionId": 2,
                "removed": false
            },
            "item_5": {
                "projectId": 1,
                "name": "jobs",
                "migrations": [
                    {
                        "migration": "C:\\Users\\save\\Documents\\projectLaravel\\tts/database/migrations/0001_01_01_000002_create_jobs_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000002_create_jobs_table.php",
                        "migrationName": "0001_01_01_000002_create_jobs_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000002",
                        "createdTables": [
                            "jobs",
                            "job_batches",
                            "failed_jobs"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "jobs",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\save\\Documents\\projectLaravel\\tts/database/migrations/0001_01_01_000002_create_jobs_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000002_create_jobs_table.php",
                            "migrationName": "0001_01_01_000002_create_jobs_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000002",
                            "createdTables": [
                                "jobs",
                                "job_batches",
                                "failed_jobs"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 5,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16",
                "positionX": 0,
                "positionY": 0,
                "sectionId": 2,
                "removed": false
            },
            "item_6": {
                "projectId": 1,
                "name": "migrations",
                "migrations": [],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "migrations",
                    "oldNames": [],
                    "migrations": []
                },
                "id": 6,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16",
                "positionX": 0,
                "positionY": 0,
                "sectionId": 2,
                "removed": false
            },
            "item_7": {
                "projectId": 1,
                "name": "password_reset_tokens",
                "migrations": [
                    {
                        "migration": "C:\\Users\\save\\Documents\\projectLaravel\\tts/database/migrations/0001_01_01_000000_create_users_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000000_create_users_table.php",
                        "migrationName": "0001_01_01_000000_create_users_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000000",
                        "createdTables": [
                            "users",
                            "password_reset_tokens",
                            "sessions"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "password_reset_tokens",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\save\\Documents\\projectLaravel\\tts/database/migrations/0001_01_01_000000_create_users_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000000_create_users_table.php",
                            "migrationName": "0001_01_01_000000_create_users_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000000",
                            "createdTables": [
                                "users",
                                "password_reset_tokens",
                                "sessions"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 7,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16",
                "positionX": 0,
                "positionY": 0,
                "sectionId": 2,
                "removed": false
            },
            "item_8": {
                "projectId": 1,
                "name": "personal_access_tokens",
                "migrations": [
                    {
                        "migration": "C:\\Users\\save\\Documents\\projectLaravel\\tts/database/migrations/2024_12_09_175109_create_personal_access_tokens_table.php",
                        "relativePath": "/database/migrations/2024_12_09_175109_create_personal_access_tokens_table.php",
                        "migrationName": "2024_12_09_175109_create_personal_access_tokens_table",
                        "datePrefix": "2024_12_09",
                        "fullPrefix": "2024_12_09_175109",
                        "createdTables": [
                            "personal_access_tokens"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "personal_access_tokens",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\save\\Documents\\projectLaravel\\tts/database/migrations/2024_12_09_175109_create_personal_access_tokens_table.php",
                            "relativePath": "/database/migrations/2024_12_09_175109_create_personal_access_tokens_table.php",
                            "migrationName": "2024_12_09_175109_create_personal_access_tokens_table",
                            "datePrefix": "2024_12_09",
                            "fullPrefix": "2024_12_09_175109",
                            "createdTables": [
                                "personal_access_tokens"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 8,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16",
                "positionX": 0,
                "positionY": 0,
                "sectionId": 2,
                "removed": false
            },
            "item_9": {
                "projectId": 1,
                "name": "sessions",
                "migrations": [
                    {
                        "migration": "C:\\Users\\save\\Documents\\projectLaravel\\tts/database/migrations/0001_01_01_000000_create_users_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000000_create_users_table.php",
                        "migrationName": "0001_01_01_000000_create_users_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000000",
                        "createdTables": [
                            "users",
                            "password_reset_tokens",
                            "sessions"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "sessions",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\save\\Documents\\projectLaravel\\tts/database/migrations/0001_01_01_000000_create_users_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000000_create_users_table.php",
                            "migrationName": "0001_01_01_000000_create_users_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000000",
                            "createdTables": [
                                "users",
                                "password_reset_tokens",
                                "sessions"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 9,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16",
                "positionX": 0,
                "positionY": 0,
                "sectionId": 2,
                "removed": false
            },
            "item_10": {
                "projectId": 1,
                "name": "team_invitations",
                "migrations": [
                    {
                        "migration": "C:\\Users\\save\\Documents\\projectLaravel\\tts/database/migrations/2024_12_09_175111_create_team_invitations_table.php",
                        "relativePath": "/database/migrations/2024_12_09_175111_create_team_invitations_table.php",
                        "migrationName": "2024_12_09_175111_create_team_invitations_table",
                        "datePrefix": "2024_12_09",
                        "fullPrefix": "2024_12_09_175111",
                        "createdTables": [
                            "team_invitations"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "team_invitations",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\save\\Documents\\projectLaravel\\tts/database/migrations/2024_12_09_175111_create_team_invitations_table.php",
                            "relativePath": "/database/migrations/2024_12_09_175111_create_team_invitations_table.php",
                            "migrationName": "2024_12_09_175111_create_team_invitations_table",
                            "datePrefix": "2024_12_09",
                            "fullPrefix": "2024_12_09_175111",
                            "createdTables": [
                                "team_invitations"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 10,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16",
                "positionX": 0,
                "positionY": 0,
                "sectionId": 3,
                "removed": false
            },
            "item_11": {
                "projectId": 1,
                "name": "team_user",
                "migrations": [
                    {
                        "migration": "C:\\Users\\save\\Documents\\projectLaravel\\tts/database/migrations/2024_12_09_175110_create_team_user_table.php",
                        "relativePath": "/database/migrations/2024_12_09_175110_create_team_user_table.php",
                        "migrationName": "2024_12_09_175110_create_team_user_table",
                        "datePrefix": "2024_12_09",
                        "fullPrefix": "2024_12_09_175110",
                        "createdTables": [
                            "team_user"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "team_user",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\save\\Documents\\projectLaravel\\tts/database/migrations/2024_12_09_175110_create_team_user_table.php",
                            "relativePath": "/database/migrations/2024_12_09_175110_create_team_user_table.php",
                            "migrationName": "2024_12_09_175110_create_team_user_table",
                            "datePrefix": "2024_12_09",
                            "fullPrefix": "2024_12_09_175110",
                            "createdTables": [
                                "team_user"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 11,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16",
                "positionX": 0,
                "positionY": 0,
                "sectionId": 3,
                "removed": false
            },
            "item_12": {
                "projectId": 1,
                "name": "teams",
                "migrations": [
                    {
                        "migration": "C:\\Users\\save\\Documents\\projectLaravel\\tts/database/migrations/2024_12_09_175109_create_teams_table.php",
                        "relativePath": "/database/migrations/2024_12_09_175109_create_teams_table.php",
                        "migrationName": "2024_12_09_175109_create_teams_table",
                        "datePrefix": "2024_12_09",
                        "fullPrefix": "2024_12_09_175109",
                        "createdTables": [
                            "teams"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "teams",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\save\\Documents\\projectLaravel\\tts/database/migrations/2024_12_09_175109_create_teams_table.php",
                            "relativePath": "/database/migrations/2024_12_09_175109_create_teams_table.php",
                            "migrationName": "2024_12_09_175109_create_teams_table",
                            "datePrefix": "2024_12_09",
                            "fullPrefix": "2024_12_09_175109",
                            "createdTables": [
                                "teams"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 12,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16",
                "positionX": 0,
                "positionY": 0,
                "sectionId": 3,
                "removed": false
            },
            "item_13": {
                "projectId": 1,
                "name": "users",
                "migrations": [
                    {
                        "migration": "C:\\Users\\save\\Documents\\projectLaravel\\tts/database/migrations/0001_01_01_000000_create_users_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000000_create_users_table.php",
                        "migrationName": "0001_01_01_000000_create_users_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000000",
                        "createdTables": [
                            "users",
                            "password_reset_tokens",
                            "sessions"
                        ],
                        "changedTables": []
                    },
                    {
                        "migration": "C:\\Users\\save\\Documents\\projectLaravel\\tts/database/migrations/2024_12_09_175031_add_two_factor_columns_to_users_table.php",
                        "relativePath": "/database/migrations/2024_12_09_175031_add_two_factor_columns_to_users_table.php",
                        "migrationName": "2024_12_09_175031_add_two_factor_columns_to_users_table",
                        "datePrefix": "2024_12_09",
                        "fullPrefix": "2024_12_09_175031",
                        "createdTables": [],
                        "changedTables": [
                            "users"
                        ]
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "users",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\save\\Documents\\projectLaravel\\tts/database/migrations/0001_01_01_000000_create_users_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000000_create_users_table.php",
                            "migrationName": "0001_01_01_000000_create_users_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000000",
                            "createdTables": [
                                "users",
                                "password_reset_tokens",
                                "sessions"
                            ],
                            "changedTables": []
                        },
                        {
                            "migration": "C:\\Users\\save\\Documents\\projectLaravel\\tts/database/migrations/2024_12_09_175031_add_two_factor_columns_to_users_table.php",
                            "relativePath": "/database/migrations/2024_12_09_175031_add_two_factor_columns_to_users_table.php",
                            "migrationName": "2024_12_09_175031_add_two_factor_columns_to_users_table",
                            "datePrefix": "2024_12_09",
                            "fullPrefix": "2024_12_09_175031",
                            "createdTables": [],
                            "changedTables": [
                                "users"
                            ]
                        }
                    ]
                },
                "id": 13,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16",
                "positionX": "-413",
                "positionY": "-251",
                "sectionId": 1,
                "removed": false
            },
            "item_15": {
                "projectId": 1,
                "name": "formulir",
                "migrations": [],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "formulir",
                    "oldNames": [],
                    "migrations": []
                },
                "sectionId": 1,
                "id": 15,
                "createdAt": "2024-12-10 01:07:47",
                "updatedAt": "2024-12-10 01:09:16",
                "positionX": 0,
                "positionY": 0,
                "removed": false
            }
        },
        "columns": {
            "item_1": {
                "name": "key",
                "type": "string",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "key",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 1,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "__tableData": {
                "count": 92,
                "lastPrimaryKey": 101,
                "index": {
                    "1": {
                        "hasMany": {
                            "index_column.columnId": [
                                1
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {
                            "index_column.columnId": [
                                2
                            ]
                        }
                    },
                    "5": {
                        "hasMany": {}
                    },
                    "6": {
                        "hasMany": {}
                    },
                    "7": {
                        "hasMany": {}
                    },
                    "8": {
                        "hasMany": {}
                    },
                    "9": {
                        "hasMany": {}
                    },
                    "10": {
                        "hasMany": {}
                    },
                    "11": {
                        "hasMany": {}
                    },
                    "12": {
                        "hasMany": {}
                    },
                    "13": {
                        "hasMany": {}
                    },
                    "14": {
                        "hasMany": {
                            "index_column.columnId": [
                                3
                            ]
                        }
                    },
                    "15": {
                        "hasMany": {}
                    },
                    "16": {
                        "hasMany": {}
                    },
                    "17": {
                        "hasMany": {}
                    },
                    "18": {
                        "hasMany": {}
                    },
                    "19": {
                        "hasMany": {}
                    },
                    "20": {
                        "hasMany": {}
                    },
                    "21": {
                        "hasMany": {}
                    },
                    "22": {
                        "hasMany": {}
                    },
                    "23": {
                        "hasMany": {}
                    },
                    "24": {
                        "hasMany": {}
                    },
                    "25": {
                        "hasMany": {}
                    },
                    "26": {
                        "hasMany": {}
                    },
                    "27": {
                        "hasMany": {}
                    },
                    "28": {
                        "hasMany": {}
                    },
                    "29": {
                        "hasMany": {}
                    },
                    "30": {
                        "hasMany": {}
                    },
                    "31": {
                        "hasMany": {}
                    },
                    "32": {
                        "hasMany": {}
                    },
                    "33": {
                        "hasMany": {}
                    },
                    "34": {
                        "hasMany": {
                            "index_column.columnId": [
                                4
                            ]
                        }
                    },
                    "35": {
                        "hasMany": {}
                    },
                    "36": {
                        "hasMany": {}
                    },
                    "37": {
                        "hasMany": {}
                    },
                    "38": {
                        "hasMany": {
                            "index_column.columnId": [
                                5
                            ]
                        }
                    },
                    "39": {
                        "hasMany": {
                            "index_column.columnId": [
                                6
                            ]
                        }
                    },
                    "40": {
                        "hasMany": {}
                    },
                    "41": {
                        "hasMany": {}
                    },
                    "42": {
                        "hasMany": {}
                    },
                    "43": {
                        "hasMany": {}
                    },
                    "44": {
                        "hasMany": {}
                    },
                    "45": {
                        "hasMany": {}
                    },
                    "46": {
                        "hasMany": {}
                    },
                    "47": {
                        "hasMany": {
                            "index_column.columnId": [
                                7
                            ]
                        }
                    },
                    "48": {
                        "hasMany": {}
                    },
                    "49": {
                        "hasMany": {}
                    },
                    "50": {
                        "hasMany": {}
                    },
                    "51": {
                        "hasMany": {}
                    },
                    "52": {
                        "hasMany": {}
                    },
                    "53": {
                        "hasMany": {}
                    },
                    "54": {
                        "hasMany": {
                            "index_column.columnId": [
                                8,
                                10
                            ],
                            "relationships.foreignKeyId": [
                                1
                            ]
                        }
                    },
                    "55": {
                        "hasMany": {
                            "index_column.columnId": [
                                9
                            ],
                            "fillable_model_column.columnId": [
                                3
                            ]
                        }
                    },
                    "56": {
                        "hasMany": {
                            "fillable_model_column.columnId": [
                                4
                            ]
                        }
                    },
                    "57": {
                        "hasMany": {}
                    },
                    "58": {
                        "hasMany": {}
                    },
                    "59": {
                        "hasMany": {}
                    },
                    "60": {
                        "hasMany": {
                            "index_column.columnId": [
                                11
                            ]
                        }
                    },
                    "61": {
                        "hasMany": {
                            "index_column.columnId": [
                                12
                            ]
                        }
                    },
                    "62": {
                        "hasMany": {}
                    },
                    "63": {
                        "hasMany": {}
                    },
                    "64": {
                        "hasMany": {}
                    },
                    "65": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                8
                            ],
                            "relationships.parentKeyId": [
                                1
                            ]
                        }
                    },
                    "66": {
                        "hasMany": {}
                    },
                    "67": {
                        "hasMany": {
                            "fillable_model_column.columnId": [
                                1
                            ]
                        }
                    },
                    "68": {
                        "hasMany": {
                            "fillable_model_column.columnId": [
                                2
                            ],
                            "casts_model_column.columnId": [
                                1
                            ]
                        }
                    },
                    "69": {
                        "hasMany": {}
                    },
                    "70": {
                        "hasMany": {}
                    },
                    "71": {
                        "hasMany": {}
                    },
                    "72": {
                        "hasMany": {
                            "fillable_model_column.columnId": [
                                5
                            ],
                            "cruds.defaultSearchColumnId": [
                                1
                            ],
                            "inputs.columnId": [
                                1
                            ]
                        }
                    },
                    "73": {
                        "hasMany": {
                            "fillable_model_column.columnId": [
                                6
                            ],
                            "inputs.columnId": [
                                2
                            ]
                        }
                    },
                    "74": {
                        "hasMany": {
                            "casts_model_column.columnId": [
                                2
                            ]
                        }
                    },
                    "75": {
                        "hasMany": {
                            "fillable_model_column.columnId": [
                                7
                            ],
                            "hidden_model_column.columnId": [
                                1
                            ],
                            "casts_model_column.columnId": [
                                3
                            ],
                            "inputs.columnId": [
                                3
                            ]
                        }
                    },
                    "76": {
                        "hasMany": {
                            "hidden_model_column.columnId": [
                                4
                            ]
                        }
                    },
                    "77": {
                        "hasMany": {
                            "hidden_model_column.columnId": [
                                3
                            ]
                        }
                    },
                    "78": {
                        "hasMany": {}
                    },
                    "79": {
                        "hasMany": {
                            "hidden_model_column.columnId": [
                                2
                            ]
                        }
                    },
                    "80": {
                        "hasMany": {}
                    },
                    "81": {
                        "hasMany": {
                            "inputs.columnId": []
                        }
                    },
                    "82": {
                        "hasMany": {}
                    },
                    "83": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                1
                            ]
                        }
                    },
                    "93": {
                        "hasMany": {}
                    },
                    "94": {
                        "hasMany": {
                            "cruds.defaultSearchColumnId": [
                                2
                            ],
                            "inputs.columnId": [
                                5
                            ]
                        }
                    },
                    "95": {
                        "hasMany": {
                            "inputs.columnId": [
                                6
                            ]
                        }
                    },
                    "96": {
                        "hasMany": {
                            "inputs.columnId": [
                                7
                            ]
                        }
                    },
                    "97": {
                        "hasMany": {
                            "inputs.columnId": [
                                8
                            ]
                        }
                    },
                    "98": {
                        "hasMany": {
                            "inputs.columnId": [
                                9
                            ]
                        }
                    },
                    "99": {
                        "hasMany": {
                            "inputs.columnId": [
                                10
                            ]
                        }
                    },
                    "100": {
                        "hasMany": {}
                    },
                    "101": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                2
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "name": "value",
                "type": "mediumText",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "value",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "mediumText",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 2,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_3": {
                "name": "expiration",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "expiration",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 3,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_4": {
                "name": "key",
                "type": "string",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 2,
                "removed": false,
                "schemaState": {
                    "name": "key",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 4,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_5": {
                "name": "owner",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 2,
                "removed": false,
                "schemaState": {
                    "name": "owner",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 5,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_6": {
                "name": "expiration",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 2,
                "removed": false,
                "schemaState": {
                    "name": "expiration",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 6,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_7": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 3,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 7,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_8": {
                "name": "uuid",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": true,
                "tableId": 3,
                "removed": false,
                "schemaState": {
                    "name": "uuid",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": true,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->uuid()",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 8,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_9": {
                "name": "connection",
                "type": "text",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 3,
                "removed": false,
                "schemaState": {
                    "name": "connection",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "text",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 9,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_10": {
                "name": "queue",
                "type": "text",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 3,
                "removed": false,
                "schemaState": {
                    "name": "queue",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "text",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 3,
                "total": null,
                "places": null,
                "options": [],
                "id": 10,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_11": {
                "name": "payload",
                "type": "longText",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 3,
                "removed": false,
                "schemaState": {
                    "name": "payload",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "longText",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 4,
                "total": null,
                "places": null,
                "options": [],
                "id": 11,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_12": {
                "name": "exception",
                "type": "longText",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 3,
                "removed": false,
                "schemaState": {
                    "name": "exception",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "longText",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 5,
                "total": null,
                "places": null,
                "options": [],
                "id": 12,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_13": {
                "name": "failed_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 3,
                "removed": false,
                "schemaState": {
                    "name": "failed_at",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": "CURRENT_TIMESTAMP",
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": "CURRENT_TIMESTAMP",
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 6,
                "total": null,
                "places": null,
                "options": [],
                "id": 13,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_14": {
                "name": "id",
                "type": "string",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 14,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_15": {
                "name": "name",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->name()",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 15,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_16": {
                "name": "total_jobs",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "total_jobs",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 16,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_17": {
                "name": "pending_jobs",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "pending_jobs",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 3,
                "total": null,
                "places": null,
                "options": [],
                "id": 17,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_18": {
                "name": "failed_jobs",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "failed_jobs",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 4,
                "total": null,
                "places": null,
                "options": [],
                "id": 18,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_19": {
                "name": "failed_job_ids",
                "type": "longText",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "failed_job_ids",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "longText",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 5,
                "total": null,
                "places": null,
                "options": [],
                "id": 19,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_20": {
                "name": "options",
                "type": "mediumText",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "options",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "mediumText",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "[]",
                "order": 6,
                "total": null,
                "places": null,
                "options": [],
                "id": 20,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_21": {
                "name": "cancelled_at",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "cancelled_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 7,
                "total": null,
                "places": null,
                "options": [],
                "id": 21,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_22": {
                "name": "created_at",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 8,
                "total": null,
                "places": null,
                "options": [],
                "id": 22,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_23": {
                "name": "finished_at",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "finished_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 9,
                "total": null,
                "places": null,
                "options": [],
                "id": 23,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_24": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 24,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_25": {
                "name": "queue",
                "type": "string",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "queue",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 25,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_26": {
                "name": "payload",
                "type": "longText",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "payload",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "longText",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 26,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_27": {
                "name": "attempts",
                "type": "tinyInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "attempts",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "tinyInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->numberBetween(0, 127)",
                "order": 3,
                "total": null,
                "places": null,
                "options": [],
                "id": 27,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_28": {
                "name": "reserved_at",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "reserved_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 4,
                "total": null,
                "places": null,
                "options": [],
                "id": 28,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_29": {
                "name": "available_at",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "available_at",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 5,
                "total": null,
                "places": null,
                "options": [],
                "id": 29,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_30": {
                "name": "created_at",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 6,
                "total": null,
                "places": null,
                "options": [],
                "id": 30,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_31": {
                "name": "id",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 6,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 31,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_32": {
                "name": "migration",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 6,
                "removed": false,
                "schemaState": {
                    "name": "migration",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 32,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_33": {
                "name": "batch",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 6,
                "removed": false,
                "schemaState": {
                    "name": "batch",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 33,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_34": {
                "name": "email",
                "type": "string",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 7,
                "removed": false,
                "schemaState": {
                    "name": "email",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->unique()->safeEmail()",
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 34,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_35": {
                "name": "token",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 7,
                "removed": false,
                "schemaState": {
                    "name": "token",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 35,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_36": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 7,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 36,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_37": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 37,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_38": {
                "name": "tokenable_type",
                "type": "string",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "tokenable_type",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 38,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_39": {
                "name": "tokenable_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "tokenable_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 39,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_40": {
                "name": "name",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->name()",
                "order": 3,
                "total": null,
                "places": null,
                "options": [],
                "id": 40,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_41": {
                "name": "token",
                "type": "string",
                "index": false,
                "length": "64",
                "unique": true,
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "token",
                    "length": "64",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": true,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 4,
                "total": null,
                "places": null,
                "options": [],
                "id": 41,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_42": {
                "name": "abilities",
                "type": "text",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "abilities",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "text",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 5,
                "total": null,
                "places": null,
                "options": [],
                "id": 42,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_43": {
                "name": "last_used_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "last_used_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 6,
                "total": null,
                "places": null,
                "options": [],
                "id": 43,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_44": {
                "name": "expires_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "expires_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 7,
                "total": null,
                "places": null,
                "options": [],
                "id": 44,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_45": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 8,
                "total": null,
                "places": null,
                "options": [],
                "id": 45,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_46": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 9,
                "total": null,
                "places": null,
                "options": [],
                "id": 46,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_47": {
                "name": "id",
                "type": "string",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 47,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_48": {
                "name": "user_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "user_id",
                    "length": null,
                    "nullable": true,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 48,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_49": {
                "name": "ip_address",
                "type": "string",
                "index": false,
                "length": "45",
                "unique": false,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "ip_address",
                    "length": "45",
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->ipv4()",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 49,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_50": {
                "name": "user_agent",
                "type": "text",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "user_agent",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "text",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->userAgent()",
                "order": 3,
                "total": null,
                "places": null,
                "options": [],
                "id": 50,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_51": {
                "name": "payload",
                "type": "longText",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "payload",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "longText",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 4,
                "total": null,
                "places": null,
                "options": [],
                "id": 51,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_52": {
                "name": "last_activity",
                "type": "integer",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "last_activity",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 5,
                "total": null,
                "places": null,
                "options": [],
                "id": 52,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_53": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 53,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_54": {
                "name": "team_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "team_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 54,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_55": {
                "name": "email",
                "type": "string",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "email",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->unique()->safeEmail()",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 55,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_56": {
                "name": "role",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "role",
                    "length": "255",
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 3,
                "total": null,
                "places": null,
                "options": [],
                "id": 56,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_57": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 4,
                "total": null,
                "places": null,
                "options": [],
                "id": 57,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_58": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 5,
                "total": null,
                "places": null,
                "options": [],
                "id": 58,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_59": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 11,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 59,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_60": {
                "name": "team_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 11,
                "removed": false,
                "schemaState": {
                    "name": "team_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 60,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_61": {
                "name": "user_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 11,
                "removed": false,
                "schemaState": {
                    "name": "user_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 61,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_62": {
                "name": "role",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 11,
                "removed": false,
                "schemaState": {
                    "name": "role",
                    "length": "255",
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 3,
                "total": null,
                "places": null,
                "options": [],
                "id": 62,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_63": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 11,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 4,
                "total": null,
                "places": null,
                "options": [],
                "id": 63,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_64": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 11,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 5,
                "total": null,
                "places": null,
                "options": [],
                "id": 64,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_65": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 65,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_66": {
                "name": "user_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "user_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 66,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_67": {
                "name": "name",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->name()",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 67,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_68": {
                "name": "personal_team",
                "type": "boolean",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "personal_team",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "boolean",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->boolean()",
                "order": 3,
                "total": null,
                "places": null,
                "options": [],
                "id": 68,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_69": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 4,
                "total": null,
                "places": null,
                "options": [],
                "id": 69,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_70": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 5,
                "total": null,
                "places": null,
                "options": [],
                "id": 70,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_71": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 71,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_72": {
                "name": "name",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->name()",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 72,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_73": {
                "name": "email",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": true,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "email",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": true,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->unique()->safeEmail()",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 73,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_74": {
                "name": "email_verified_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "email_verified_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "now()",
                "order": 3,
                "total": null,
                "places": null,
                "options": [],
                "id": 74,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_75": {
                "name": "password",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "password",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "\\Hash::make('password')",
                "order": 4,
                "total": null,
                "places": null,
                "options": [],
                "id": 75,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_76": {
                "name": "two_factor_secret",
                "type": "text",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "two_factor_secret",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "text",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 5,
                "total": null,
                "places": null,
                "options": [],
                "id": 76,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_77": {
                "name": "two_factor_recovery_codes",
                "type": "text",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "two_factor_recovery_codes",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "text",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 6,
                "total": null,
                "places": null,
                "options": [],
                "id": 77,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_78": {
                "name": "two_factor_confirmed_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "two_factor_confirmed_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "order": 7,
                "total": null,
                "places": null,
                "options": [],
                "id": 78,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_79": {
                "name": "remember_token",
                "type": "string",
                "index": false,
                "length": "100",
                "unique": false,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "remember_token",
                    "length": "100",
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "Str::random(10)",
                "order": 8,
                "total": null,
                "places": null,
                "options": [],
                "id": 79,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_80": {
                "name": "current_team_id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "current_team_id",
                    "length": null,
                    "nullable": true,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "order": 9,
                "total": null,
                "places": null,
                "options": [],
                "id": 80,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_81": {
                "name": "profile_photo_path",
                "type": "string",
                "index": false,
                "length": "2048",
                "unique": false,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "profile_photo_path",
                    "length": "2048",
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "order": 10,
                "total": null,
                "places": null,
                "options": [],
                "id": 81,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_82": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 11,
                "total": null,
                "places": null,
                "options": [],
                "id": 82,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_83": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 12,
                "total": null,
                "places": null,
                "options": [],
                "id": 83,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_93": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 15,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 93,
                "createdAt": "2024-12-10 01:07:47",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_94": {
                "name": "name",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 15,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->name()",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 94,
                "createdAt": "2024-12-10 01:07:47",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_95": {
                "name": "phone",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 15,
                "removed": false,
                "schemaState": {
                    "name": "phone",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->phoneNumber()",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 95,
                "createdAt": "2024-12-10 01:07:47",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_96": {
                "name": "institution",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 15,
                "removed": false,
                "schemaState": {
                    "name": "institution",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 3,
                "total": null,
                "places": null,
                "options": [],
                "id": 96,
                "createdAt": "2024-12-10 01:07:47",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_97": {
                "name": "domicile",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 15,
                "removed": false,
                "schemaState": {
                    "name": "domicile",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 4,
                "total": null,
                "places": null,
                "options": [],
                "id": 97,
                "createdAt": "2024-12-10 01:07:47",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_98": {
                "name": "event",
                "type": "enum",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 15,
                "removed": false,
                "schemaState": {
                    "name": "event",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "enum",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": [
                        "Flower Bouquet | 18 Dec | 13:00 | IDR 25.000",
                        "Flower Bouquet | 18 Dec | 14:00 | IDR 25.000",
                        "Lomba Sketsa A4 | 18 Dec | 15:00 | IDR 30.000",
                        "Lomba Poster A3 | 19 Dec | 09:00 | IDR 30.000",
                        "Mewarnai A | 19 Dec | 13:00 | IDR 30.000",
                        "Mewarnai B | 19 Dec | 15:00 | IDR 30.000",
                        "Painting Ashtray | 20 Dec | 13:00 | IDR 20.000",
                        "Lomba Puisi | 20 Dec | 15:00 | IDR 30.000",
                        "Mirror Decoration | 20 Dec | 15:00 | IDR 30.000"
                    ]
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "'{DEFAULT_OR_FIRST}'",
                "order": 5,
                "total": null,
                "places": null,
                "options": [
                    "Flower Bouquet | 18 Dec | 13:00 | IDR 25.000",
                    "Flower Bouquet | 18 Dec | 14:00 | IDR 25.000",
                    "Lomba Sketsa A4 | 18 Dec | 15:00 | IDR 30.000",
                    "Lomba Poster A3 | 19 Dec | 09:00 | IDR 30.000",
                    "Mewarnai A | 19 Dec | 13:00 | IDR 30.000",
                    "Mewarnai B | 19 Dec | 15:00 | IDR 30.000",
                    "Painting Ashtray | 20 Dec | 13:00 | IDR 20.000",
                    "Lomba Puisi | 20 Dec | 15:00 | IDR 30.000",
                    "Mirror Decoration | 20 Dec | 15:00 | IDR 30.000"
                ],
                "id": 98,
                "createdAt": "2024-12-10 01:07:47",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_99": {
                "name": "image",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 15,
                "removed": false,
                "schemaState": {
                    "name": "image",
                    "length": "255",
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "order": 6,
                "total": null,
                "places": null,
                "options": [],
                "id": 99,
                "createdAt": "2024-12-10 01:07:47",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_100": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 15,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 7,
                "total": null,
                "places": null,
                "options": [],
                "id": 100,
                "createdAt": "2024-12-10 01:07:47",
                "updatedAt": "2024-12-10 01:09:16"
            },
            "item_101": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 15,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 8,
                "total": null,
                "places": null,
                "options": [],
                "id": 101,
                "createdAt": "2024-12-10 01:07:47",
                "updatedAt": "2024-12-10 01:09:16"
            }
        },
        "indices": {
            "item_1": {
                "tableId": 1,
                "name": "",
                "columns": [
                    "key"
                ],
                "algorithm": null,
                "type": "primary",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "",
                    "columns": [
                        "key"
                    ],
                    "algorithm": null,
                    "type": "primary",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 1,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16",
                "removed": false
            },
            "__tableData": {
                "count": 9,
                "lastPrimaryKey": 9,
                "index": {
                    "1": {
                        "hasMany": {
                            "index_column.indexId": [
                                1
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "index_column.indexId": [
                                2
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {
                            "index_column.indexId": [
                                3
                            ]
                        }
                    },
                    "4": {
                        "hasMany": {
                            "index_column.indexId": [
                                4
                            ]
                        }
                    },
                    "5": {
                        "hasMany": {
                            "index_column.indexId": [
                                5,
                                6
                            ]
                        }
                    },
                    "6": {
                        "hasMany": {
                            "index_column.indexId": [
                                7
                            ]
                        }
                    },
                    "7": {
                        "hasMany": {
                            "index_column.indexId": [
                                8,
                                9
                            ]
                        }
                    },
                    "8": {
                        "hasMany": {
                            "index_column.indexId": [
                                10
                            ]
                        }
                    },
                    "9": {
                        "hasMany": {
                            "index_column.indexId": [
                                11,
                                12
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "tableId": 2,
                "name": "",
                "columns": [
                    "key"
                ],
                "algorithm": null,
                "type": "primary",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "",
                    "columns": [
                        "key"
                    ],
                    "algorithm": null,
                    "type": "primary",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 2,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16",
                "removed": false
            },
            "item_3": {
                "tableId": 4,
                "name": "",
                "columns": [
                    "id"
                ],
                "algorithm": null,
                "type": "primary",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "",
                    "columns": [
                        "id"
                    ],
                    "algorithm": null,
                    "type": "primary",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 3,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16",
                "removed": false
            },
            "item_4": {
                "tableId": 7,
                "name": "",
                "columns": [
                    "email"
                ],
                "algorithm": null,
                "type": "primary",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "",
                    "columns": [
                        "email"
                    ],
                    "algorithm": null,
                    "type": "primary",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 4,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16",
                "removed": false
            },
            "item_5": {
                "tableId": 8,
                "name": "personal_access_tokens_tokenable_type_tokenable_id_index",
                "columns": [
                    "tokenable_type",
                    "tokenable_id"
                ],
                "algorithm": null,
                "type": "index",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "personal_access_tokens_tokenable_type_tokenable_id_index",
                    "columns": [
                        "tokenable_type",
                        "tokenable_id"
                    ],
                    "algorithm": null,
                    "type": "index",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 5,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16",
                "removed": false
            },
            "item_6": {
                "tableId": 9,
                "name": "",
                "columns": [
                    "id"
                ],
                "algorithm": null,
                "type": "primary",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "",
                    "columns": [
                        "id"
                    ],
                    "algorithm": null,
                    "type": "primary",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 6,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16",
                "removed": false
            },
            "item_7": {
                "tableId": 10,
                "name": "team_invitations_team_id_email_unique",
                "columns": [
                    "team_id",
                    "email"
                ],
                "algorithm": null,
                "type": "unique",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "team_invitations_team_id_email_unique",
                    "columns": [
                        "team_id",
                        "email"
                    ],
                    "algorithm": null,
                    "type": "unique",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 7,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16",
                "removed": false
            },
            "item_8": {
                "tableId": 10,
                "name": "team_invitations_team_id_foreign",
                "columns": [
                    "team_id"
                ],
                "algorithm": null,
                "type": "foreign",
                "on": "teams",
                "references": "id",
                "onUpdate": "restrict",
                "onDelete": "cascade",
                "schemaState": {
                    "name": "team_invitations_team_id_foreign",
                    "columns": [
                        "team_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "teams",
                    "references": "id",
                    "onUpdate": "restrict",
                    "onDelete": "cascade"
                },
                "id": 8,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16",
                "onTableId": 12,
                "referencesColumnId": 65,
                "removed": false
            },
            "item_9": {
                "tableId": 11,
                "name": "team_user_team_id_user_id_unique",
                "columns": [
                    "team_id",
                    "user_id"
                ],
                "algorithm": null,
                "type": "unique",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "team_user_team_id_user_id_unique",
                    "columns": [
                        "team_id",
                        "user_id"
                    ],
                    "algorithm": null,
                    "type": "unique",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 9,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:09:16",
                "removed": false
            }
        },
        "index_column": {
            "item_1": {
                "indexId": 1,
                "columnId": 1,
                "id": 1,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02"
            },
            "__tableData": {
                "count": 12,
                "lastPrimaryKey": 12,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    },
                    "5": {
                        "hasMany": {}
                    },
                    "6": {
                        "hasMany": {}
                    },
                    "7": {
                        "hasMany": {}
                    },
                    "8": {
                        "hasMany": {}
                    },
                    "9": {
                        "hasMany": {}
                    },
                    "10": {
                        "hasMany": {}
                    },
                    "11": {
                        "hasMany": {}
                    },
                    "12": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "indexId": 2,
                "columnId": 4,
                "id": 2,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02"
            },
            "item_3": {
                "indexId": 3,
                "columnId": 14,
                "id": 3,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02"
            },
            "item_4": {
                "indexId": 4,
                "columnId": 34,
                "id": 4,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02"
            },
            "item_5": {
                "indexId": 5,
                "columnId": 38,
                "id": 5,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02"
            },
            "item_6": {
                "indexId": 5,
                "columnId": 39,
                "id": 6,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02"
            },
            "item_7": {
                "indexId": 6,
                "columnId": 47,
                "id": 7,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02"
            },
            "item_8": {
                "indexId": 7,
                "columnId": 54,
                "id": 8,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02"
            },
            "item_9": {
                "indexId": 7,
                "columnId": 55,
                "id": 9,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02"
            },
            "item_10": {
                "indexId": 8,
                "columnId": 54,
                "id": 10,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02"
            },
            "item_11": {
                "indexId": 9,
                "columnId": 60,
                "id": 11,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02"
            },
            "item_12": {
                "indexId": 9,
                "columnId": 61,
                "id": 12,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02"
            }
        },
        "models": {
            "item_1": {
                "projectId": 1,
                "name": "Membership",
                "fileName": "Membership.php",
                "tableName": "team_user",
                "class": "App\\Models\\Membership",
                "namespace": "App\\Models",
                "path": "Models\\Membership.php",
                "casts": [],
                "fillable": [],
                "guarded": [],
                "dates": [],
                "hidden": [],
                "appends": [],
                "methods": [],
                "createdFromInterface": false,
                "parentClass": "Laravel\\Jetstream\\Membership as JetstreamMembership",
                "interfaces": [],
                "traits": [],
                "allImports": [
                    "Laravel\\Jetstream\\Membership as JetstreamMembership"
                ],
                "hasGuarded": false,
                "hasFillable": false,
                "hasTimestamps": true,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "Membership",
                    "fileName": "Membership.php",
                    "tableName": "team_user",
                    "class": "App\\Models\\Membership",
                    "namespace": "App\\Models",
                    "path": "Models\\Membership.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Laravel\\Jetstream\\Membership as JetstreamMembership",
                    "interfaces": [],
                    "traits": [],
                    "allImports": [
                        "Laravel\\Jetstream\\Membership as JetstreamMembership"
                    ],
                    "hasGuarded": false,
                    "hasFillable": false,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                },
                "id": 1,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:10:50",
                "plural": "Memberships",
                "pluralAndSingularAreSame": false,
                "tableId": 11,
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "removed": false
            },
            "__tableData": {
                "count": 5,
                "lastPrimaryKey": 7,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {
                            "fillable_model_column.modelId": [
                                1,
                                2
                            ],
                            "casts_model_column.modelId": [
                                1
                            ],
                            "relationships.relatedModelId": [
                                1
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {
                            "fillable_model_column.modelId": [
                                3,
                                4
                            ],
                            "relationships.modelId": [
                                1
                            ]
                        }
                    },
                    "4": {
                        "hasMany": {
                            "fillable_model_column.modelId": [
                                5,
                                6,
                                7
                            ],
                            "hidden_model_column.modelId": [
                                1,
                                2,
                                3,
                                4
                            ],
                            "casts_model_column.modelId": [
                                2,
                                3
                            ],
                            "cruds.modelId": [
                                1
                            ]
                        }
                    },
                    "7": {
                        "hasMany": {
                            "cruds.modelId": [
                                2
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "projectId": 1,
                "name": "Team",
                "fileName": "Team.php",
                "tableName": "teams",
                "class": "App\\Models\\Team",
                "namespace": "App\\Models",
                "path": "Models\\Team.php",
                "casts": {
                    "personal_team": "boolean"
                },
                "fillable": [
                    "name",
                    "personal_team"
                ],
                "guarded": [
                    "*"
                ],
                "dates": [],
                "hidden": [],
                "appends": [],
                "methods": [],
                "createdFromInterface": false,
                "parentClass": "Laravel\\Jetstream\\Team as JetstreamTeam",
                "interfaces": [],
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                    "Laravel\\Jetstream\\Events\\TeamCreated",
                    "Laravel\\Jetstream\\Events\\TeamDeleted",
                    "Laravel\\Jetstream\\Events\\TeamUpdated",
                    "Laravel\\Jetstream\\Team as JetstreamTeam"
                ],
                "hasGuarded": false,
                "hasFillable": true,
                "hasTimestamps": true,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "Team",
                    "fileName": "Team.php",
                    "tableName": "teams",
                    "class": "App\\Models\\Team",
                    "namespace": "App\\Models",
                    "path": "Models\\Team.php",
                    "casts": {
                        "personal_team": "boolean"
                    },
                    "fillable": [
                        "name",
                        "personal_team"
                    ],
                    "guarded": [
                        "*"
                    ],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Laravel\\Jetstream\\Team as JetstreamTeam",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                        "Laravel\\Jetstream\\Events\\TeamCreated",
                        "Laravel\\Jetstream\\Events\\TeamDeleted",
                        "Laravel\\Jetstream\\Events\\TeamUpdated",
                        "Laravel\\Jetstream\\Team as JetstreamTeam"
                    ],
                    "hasGuarded": false,
                    "hasFillable": true,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                },
                "id": 2,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:10:50",
                "plural": "Teams",
                "pluralAndSingularAreSame": false,
                "tableId": 12,
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "removed": false
            },
            "item_3": {
                "projectId": 1,
                "name": "TeamInvitation",
                "fileName": "TeamInvitation.php",
                "tableName": "team_invitations",
                "class": "App\\Models\\TeamInvitation",
                "namespace": "App\\Models",
                "path": "Models\\TeamInvitation.php",
                "casts": [],
                "fillable": [
                    "email",
                    "role"
                ],
                "guarded": [
                    "*"
                ],
                "dates": [],
                "hidden": [],
                "appends": [],
                "methods": [],
                "createdFromInterface": false,
                "parentClass": "Laravel\\Jetstream\\TeamInvitation as JetstreamTeamInvitation",
                "interfaces": [],
                "traits": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo",
                    "Laravel\\Jetstream\\Jetstream",
                    "Laravel\\Jetstream\\TeamInvitation as JetstreamTeamInvitation"
                ],
                "hasGuarded": false,
                "hasFillable": true,
                "hasTimestamps": true,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "TeamInvitation",
                    "fileName": "TeamInvitation.php",
                    "tableName": "team_invitations",
                    "class": "App\\Models\\TeamInvitation",
                    "namespace": "App\\Models",
                    "path": "Models\\TeamInvitation.php",
                    "casts": [],
                    "fillable": [
                        "email",
                        "role"
                    ],
                    "guarded": [
                        "*"
                    ],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Laravel\\Jetstream\\TeamInvitation as JetstreamTeamInvitation",
                    "interfaces": [],
                    "traits": [],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo",
                        "Laravel\\Jetstream\\Jetstream",
                        "Laravel\\Jetstream\\TeamInvitation as JetstreamTeamInvitation"
                    ],
                    "hasGuarded": false,
                    "hasFillable": true,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                },
                "id": 3,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:10:50",
                "plural": "TeamInvitations",
                "pluralAndSingularAreSame": false,
                "tableId": 10,
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "removed": false
            },
            "item_4": {
                "projectId": 1,
                "name": "User",
                "fileName": "User.php",
                "tableName": "users",
                "class": "App\\Models\\User",
                "namespace": "App\\Models",
                "path": "Models\\User.php",
                "casts": {
                    "email_verified_at": "datetime",
                    "password": "hashed"
                },
                "fillable": [
                    "name",
                    "email",
                    "password"
                ],
                "guarded": [
                    "*"
                ],
                "dates": [],
                "hidden": [
                    "password",
                    "remember_token",
                    "two_factor_recovery_codes",
                    "two_factor_secret"
                ],
                "appends": [
                    "profile_photo_url"
                ],
                "methods": [],
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                "interfaces": [],
                "traits": [
                    "Laravel\\Sanctum\\HasApiTokens",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                    "Laravel\\Jetstream\\HasProfilePhoto",
                    "Laravel\\Jetstream\\HasTeams",
                    "Illuminate\\Notifications\\Notifiable",
                    "Laravel\\Fortify\\TwoFactorAuthenticatable"
                ],
                "allImports": [
                    "Illuminate\\Contracts\\Auth\\MustVerifyEmail",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                    "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                    "Illuminate\\Notifications\\Notifiable",
                    "Laravel\\Fortify\\TwoFactorAuthenticatable",
                    "Laravel\\Jetstream\\HasProfilePhoto",
                    "Laravel\\Jetstream\\HasTeams",
                    "Laravel\\Sanctum\\HasApiTokens"
                ],
                "hasGuarded": false,
                "hasFillable": true,
                "hasTimestamps": true,
                "hasSoftDeletes": false,
                "isAuthenticatable": true,
                "schemaState": {
                    "name": "User",
                    "fileName": "User.php",
                    "tableName": "users",
                    "class": "App\\Models\\User",
                    "namespace": "App\\Models",
                    "path": "Models\\User.php",
                    "casts": {
                        "email_verified_at": "datetime",
                        "password": "hashed"
                    },
                    "fillable": [
                        "name",
                        "email",
                        "password"
                    ],
                    "guarded": [
                        "*"
                    ],
                    "dates": [],
                    "hidden": [
                        "password",
                        "remember_token",
                        "two_factor_recovery_codes",
                        "two_factor_secret"
                    ],
                    "appends": [
                        "profile_photo_url"
                    ],
                    "methods": [],
                    "parentClass": "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                    "interfaces": [],
                    "traits": [
                        "Laravel\\Sanctum\\HasApiTokens",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                        "Laravel\\Jetstream\\HasProfilePhoto",
                        "Laravel\\Jetstream\\HasTeams",
                        "Illuminate\\Notifications\\Notifiable",
                        "Laravel\\Fortify\\TwoFactorAuthenticatable"
                    ],
                    "allImports": [
                        "Illuminate\\Contracts\\Auth\\MustVerifyEmail",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                        "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                        "Illuminate\\Notifications\\Notifiable",
                        "Laravel\\Fortify\\TwoFactorAuthenticatable",
                        "Laravel\\Jetstream\\HasProfilePhoto",
                        "Laravel\\Jetstream\\HasTeams",
                        "Laravel\\Sanctum\\HasApiTokens"
                    ],
                    "hasGuarded": false,
                    "hasFillable": true,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": true
                },
                "id": 4,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:10:50",
                "plural": "Users",
                "pluralAndSingularAreSame": false,
                "tableId": 13,
                "callSeeder": false,
                "seederQuantity": 5,
                "attributesComments": true,
                "methodsComments": true,
                "removed": false
            },
            "item_7": {
                "tableId": 15,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": true,
                "guarded": [],
                "name": "Formulir",
                "plural": "Formulirs",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\Formulir",
                "fileName": "Formulir.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 7,
                "createdAt": "2024-12-10 01:08:54",
                "updatedAt": "2024-12-10 01:10:50",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "formulir",
                "path": "Models\\Formulir.php",
                "hasFillable": false,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "Formulir",
                    "fileName": "Formulir.php",
                    "tableName": "formulir",
                    "class": "App\\Models\\Formulir",
                    "namespace": "App\\Models",
                    "path": "Models\\Formulir.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                }
            }
        },
        "fillable_model_column": {
            "item_1": {
                "modelId": 2,
                "columnId": 67,
                "id": 1,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02"
            },
            "__tableData": {
                "count": 7,
                "lastPrimaryKey": 7,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    },
                    "5": {
                        "hasMany": {}
                    },
                    "6": {
                        "hasMany": {}
                    },
                    "7": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "modelId": 2,
                "columnId": 68,
                "id": 2,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02"
            },
            "item_3": {
                "modelId": 3,
                "columnId": 55,
                "id": 3,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02"
            },
            "item_4": {
                "modelId": 3,
                "columnId": 56,
                "id": 4,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02"
            },
            "item_5": {
                "modelId": 4,
                "columnId": 72,
                "id": 5,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02"
            },
            "item_6": {
                "modelId": 4,
                "columnId": 73,
                "id": 6,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02"
            },
            "item_7": {
                "modelId": 4,
                "columnId": 75,
                "id": 7,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02"
            }
        },
        "casts_model_column": {
            "item_1": {
                "modelId": 2,
                "columnId": 68,
                "id": 1,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02",
                "type": "boolean"
            },
            "__tableData": {
                "count": 3,
                "lastPrimaryKey": 3,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "modelId": 4,
                "columnId": 74,
                "id": 2,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02",
                "type": "datetime"
            },
            "item_3": {
                "modelId": 4,
                "columnId": 75,
                "id": 3,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02",
                "type": "hashed"
            }
        },
        "relationships": {
            "item_1": {
                "modelId": 3,
                "projectId": 1,
                "name": "team",
                "type": "BelongsTo",
                "relatedTableName": "teams",
                "relatedModelName": "App\\Models\\Team",
                "parentTableName": "team_invitations",
                "parentModelName": "App\\Models\\TeamInvitation",
                "foreignKeyName": "team_id",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "team",
                    "type": "BelongsTo",
                    "relatedTableName": "teams",
                    "relatedModelName": "App\\Models\\Team",
                    "parentTableName": "team_invitations",
                    "parentModelName": "App\\Models\\TeamInvitation",
                    "foreignKeyName": "team_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                },
                "id": 1,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:10:50",
                "relatedModelId": 2,
                "parentKeyId": 65,
                "foreignKeyId": 54,
                "removed": false
            },
            "__tableData": {
                "count": 1,
                "lastPrimaryKey": 1,
                "index": {
                    "1": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            }
        },
        "hidden_model_column": {
            "item_1": {
                "modelId": 4,
                "columnId": 75,
                "id": 1,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02"
            },
            "__tableData": {
                "count": 4,
                "lastPrimaryKey": 4,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "modelId": 4,
                "columnId": 79,
                "id": 2,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02"
            },
            "item_3": {
                "modelId": 4,
                "columnId": 77,
                "id": 3,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02"
            },
            "item_4": {
                "modelId": 4,
                "columnId": 76,
                "id": 4,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02"
            }
        },
        "app_sections": {
            "item_1": {
                "name": "Dashboard",
                "routePrefix": "dashboard",
                "routeBasePath": "dashboard",
                "projectId": 1,
                "requiresAuth": true,
                "id": 1,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02"
            },
            "__tableData": {
                "count": 4,
                "lastPrimaryKey": 4,
                "index": {
                    "1": {
                        "hasMany": {
                            "cruds.sectionId": [
                                1,
                                2
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "name": "API",
                "routePrefix": "api",
                "routeBasePath": "api",
                "projectId": 1,
                "requiresAuth": true,
                "id": 2,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02"
            },
            "item_3": {
                "name": "Site",
                "routePrefix": "",
                "routeBasePath": "",
                "projectId": 1,
                "requiresAuth": false,
                "id": 3,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02"
            },
            "item_4": {
                "name": "Filament Panel",
                "routePrefix": "panel",
                "routeBasePath": "panel",
                "projectId": 1,
                "requiresAuth": false,
                "id": 4,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02"
            }
        },
        "schema_sections": {
            "item_1": {
                "name": "App",
                "scrollX": 24315.19921875,
                "scrollY": 24613.599609375,
                "projectId": 1,
                "id": 1,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:08:37"
            },
            "__tableData": {
                "count": 3,
                "lastPrimaryKey": 3,
                "index": {
                    "1": {
                        "hasMany": {
                            "tables.sectionId": [
                                13,
                                15
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "tables.sectionId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {
                            "tables.sectionId": [
                                10,
                                11,
                                12
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "name": "Laravel",
                "scrollX": 0,
                "scrollY": 0,
                "projectId": 1,
                "id": 2,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02"
            },
            "item_3": {
                "name": "Jetstream",
                "scrollX": 0,
                "scrollY": 0,
                "projectId": 1,
                "id": 3,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02"
            }
        },
        "navs": {
            "item_1": {
                "projectId": 1,
                "name": "navigation.home",
                "id": 1,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02",
                "tag": "home"
            },
            "__tableData": {
                "count": 4,
                "lastPrimaryKey": 4,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {
                            "navs.parentNavId": [
                                3,
                                4
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "projectId": 1,
                "name": "navigation.apps",
                "id": 2,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 00:52:02",
                "tag": "apps"
            },
            "item_3": {
                "projectId": 1,
                "navigableType": "Crud",
                "navigableId": 1,
                "name": "navigation.users",
                "id": 3,
                "createdAt": "2024-12-10 00:52:23",
                "updatedAt": "2024-12-10 00:52:23",
                "parentNavId": 2
            },
            "item_4": {
                "projectId": 1,
                "navigableType": "Crud",
                "navigableId": 2,
                "name": "navigation.formulirs",
                "id": 4,
                "createdAt": "2024-12-10 01:09:31",
                "updatedAt": "2024-12-10 01:09:31",
                "parentNavId": 2
            }
        },
        "renderable_files": {
            "item_1": {
                "path": "bootstrap",
                "name": "app.php",
                "fullPath": "bootstrap/app.php",
                "template": "laravel/BootstrapApp.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 1,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse Illuminate\\Foundation\\Application;\nuse Illuminate\\Foundation\\Configuration\\Exceptions;\nuse Illuminate\\Foundation\\Configuration\\Middleware;\n\nreturn Application::configure(basePath: dirname(__DIR__))\n    ->withProviders()\n    ->withRouting(\n        web: __DIR__ . '/../routes/web.php',\n        // api: __DIR__.'/../routes/api.php',\n        commands: __DIR__ . '/../routes/console.php',\n        // channels: __DIR__.'/../routes/channels.php',\n        health: '/up',\n\n        then: function () {\n            Route::middleware('web')->group(__DIR__ . '/../routes/app.php');\n            Route::middleware('api')->group(__DIR__ . '/../routes/app-api.php');\n        }\n    )\n    ->withMiddleware(function (Middleware $middleware) {\n        //\n    })\n    ->withExceptions(function (Exceptions $exceptions) {\n        //\n    })\n    ->create();\n"
            },
            "__tableData": {
                "count": 81,
                "lastPrimaryKey": 81,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    },
                    "5": {
                        "hasMany": {}
                    },
                    "6": {
                        "hasMany": {}
                    },
                    "7": {
                        "hasMany": {}
                    },
                    "8": {
                        "hasMany": {}
                    },
                    "9": {
                        "hasMany": {}
                    },
                    "10": {
                        "hasMany": {}
                    },
                    "11": {
                        "hasMany": {}
                    },
                    "12": {
                        "hasMany": {}
                    },
                    "13": {
                        "hasMany": {}
                    },
                    "14": {
                        "hasMany": {}
                    },
                    "15": {
                        "hasMany": {}
                    },
                    "16": {
                        "hasMany": {}
                    },
                    "17": {
                        "hasMany": {}
                    },
                    "18": {
                        "hasMany": {}
                    },
                    "19": {
                        "hasMany": {}
                    },
                    "20": {
                        "hasMany": {}
                    },
                    "21": {
                        "hasMany": {}
                    },
                    "22": {
                        "hasMany": {}
                    },
                    "23": {
                        "hasMany": {}
                    },
                    "24": {
                        "hasMany": {}
                    },
                    "25": {
                        "hasMany": {}
                    },
                    "26": {
                        "hasMany": {}
                    },
                    "27": {
                        "hasMany": {}
                    },
                    "28": {
                        "hasMany": {}
                    },
                    "29": {
                        "hasMany": {}
                    },
                    "30": {
                        "hasMany": {}
                    },
                    "31": {
                        "hasMany": {}
                    },
                    "32": {
                        "hasMany": {}
                    },
                    "33": {
                        "hasMany": {}
                    },
                    "34": {
                        "hasMany": {}
                    },
                    "35": {
                        "hasMany": {}
                    },
                    "36": {
                        "hasMany": {}
                    },
                    "37": {
                        "hasMany": {}
                    },
                    "38": {
                        "hasMany": {}
                    },
                    "39": {
                        "hasMany": {}
                    },
                    "40": {
                        "hasMany": {}
                    },
                    "41": {
                        "hasMany": {}
                    },
                    "42": {
                        "hasMany": {}
                    },
                    "43": {
                        "hasMany": {}
                    },
                    "44": {
                        "hasMany": {}
                    },
                    "45": {
                        "hasMany": {}
                    },
                    "46": {
                        "hasMany": {}
                    },
                    "47": {
                        "hasMany": {}
                    },
                    "48": {
                        "hasMany": {}
                    },
                    "49": {
                        "hasMany": {}
                    },
                    "50": {
                        "hasMany": {}
                    },
                    "51": {
                        "hasMany": {}
                    },
                    "52": {
                        "hasMany": {}
                    },
                    "53": {
                        "hasMany": {}
                    },
                    "54": {
                        "hasMany": {}
                    },
                    "55": {
                        "hasMany": {}
                    },
                    "56": {
                        "hasMany": {}
                    },
                    "57": {
                        "hasMany": {}
                    },
                    "58": {
                        "hasMany": {}
                    },
                    "59": {
                        "hasMany": {}
                    },
                    "60": {
                        "hasMany": {}
                    },
                    "61": {
                        "hasMany": {}
                    },
                    "62": {
                        "hasMany": {}
                    },
                    "63": {
                        "hasMany": {}
                    },
                    "64": {
                        "hasMany": {}
                    },
                    "65": {
                        "hasMany": {}
                    },
                    "66": {
                        "hasMany": {}
                    },
                    "67": {
                        "hasMany": {}
                    },
                    "68": {
                        "hasMany": {}
                    },
                    "69": {
                        "hasMany": {}
                    },
                    "70": {
                        "hasMany": {}
                    },
                    "71": {
                        "hasMany": {}
                    },
                    "72": {
                        "hasMany": {}
                    },
                    "73": {
                        "hasMany": {}
                    },
                    "74": {
                        "hasMany": {}
                    },
                    "75": {
                        "hasMany": {}
                    },
                    "76": {
                        "hasMany": {}
                    },
                    "77": {
                        "hasMany": {}
                    },
                    "78": {
                        "hasMany": {}
                    },
                    "79": {
                        "hasMany": {}
                    },
                    "80": {
                        "hasMany": {}
                    },
                    "81": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "path": "routes",
                "name": "app.php",
                "fullPath": "routes/app.php",
                "template": "routes/Routes.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 2,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<?php\n\nuse Illuminate\\Support\\Facades\\Route;\n\n/*\n|--------------------------------------------------------------------------\n| Web Routes - Generated by Vemto\n|--------------------------------------------------------------------------\n|\n| It is not recommended to edit this file directly. Although you can do so,\n| it will generate a conflict on Vemto's next build.\n|\n*/\n\n// Dashboard\nRoute::prefix('/dashboard')\n    ->name('dashboard.')\n    ->middleware(['auth:sanctum', config('jetstream.auth_session'), 'verified'])\n    ->group(function () {\n        Route::get('/users', App\\Livewire\\Dashboard\\UserIndex::class)->name(\n            'users.index'\n        );\n\n        Route::get(\n            '/users/create',\n            App\\Livewire\\Dashboard\\UserCreate::class\n        )->name('users.create');\n\n        Route::get(\n            '/users/{user}',\n            App\\Livewire\\Dashboard\\UserEdit::class\n        )->name('users.edit');\n\n        Route::get(\n            '/formulirs',\n            App\\Livewire\\Dashboard\\FormulirIndex::class\n        )->name('formulirs.index');\n\n        Route::get(\n            '/formulirs/create',\n            App\\Livewire\\Dashboard\\FormulirCreate::class\n        )->name('formulirs.create');\n\n        Route::get(\n            '/formulirs/{formulir}',\n            App\\Livewire\\Dashboard\\FormulirEdit::class\n        )->name('formulirs.edit');\n    });\n\n// API\nRoute::prefix('/api')\n    ->name('api.')\n    ->middleware(['auth:sanctum', config('jetstream.auth_session'), 'verified'])\n    ->group(function () {});\n\n// Site\nRoute::prefix('/')->group(function () {});\n\n// Filament Panel\nRoute::prefix('/panel')\n    ->name('panel.')\n    ->group(function () {});\n"
            },
            "item_3": {
                "path": "routes",
                "name": "app-api.php",
                "fullPath": "routes/app-api.php",
                "template": "routes/ApiRoutes.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 3,
                "createdAt": "2024-12-10 00:52:02",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\Api\\AuthController;\n\n/*\n|--------------------------------------------------------------------------\n| Api Routes - Generated by Vemto\n|--------------------------------------------------------------------------\n|\n| It is not recommended to edit this file directly. Although you can do so,\n| it will generate a conflict on Vemto's next build.\n|\n*/\n\nRoute::name('api.')\n    ->prefix('api')\n    ->group(function () {\n        Route::post('/login', [AuthController::class, 'login'])->name(\n            'api.login'\n        );\n\n        Route::middleware('auth:sanctum')->group(function () {});\n    });\n"
            },
            "item_4": {
                "path": "resources/views/components/ui",
                "name": "/toast.blade.php",
                "fullPath": "resources/views/components/ui//toast.blade.php",
                "template": "blade/ui/Toast.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 4,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "@props([\r\n    'on',\r\n    'timeout' => 2000,\r\n    'closeable' => true,\r\n])\r\n\r\n<div x-data=\"{ shown: false, timeout: null }\"\r\n    x-init=\"@this.on('{{ $on }}', () => { clearTimeout(timeout); shown = true; timeout = setTimeout(() => { shown = false }, {{ $timeout }});  })\"\r\n    x-show.transition.out.opacity.duration.500ms=\"shown\"\r\n    x-transition:leave.opacity.duration.500ms\r\n    x-transition:enter.opacity.duration.500ms\r\n    style=\"display: none;\"\r\n    {{ $attributes->merge(['class' => 'fixed right-0 top-0 p-2']) }}>\r\n    <div class=\"flex items-center bg-green-500 text-white rounded px-6 py-4\">\r\n        <div>\r\n            {{ $slot->isEmpty() ? 'Saved.' : $slot }}\r\n        </div>\r\n\r\n        @if($closeable)\r\n        <div @click=\"shown = false\" class=\"ml-4 cursor-pointer\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-4 h-4\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\r\n            </svg>              \r\n        </div>\r\n        @endif\r\n    </div>\r\n</div>"
            },
            "item_5": {
                "path": "resources/views/components/ui",
                "name": "/action/danger.blade.php",
                "fullPath": "resources/views/components/ui//action/danger.blade.php",
                "template": "blade/ui/action/Danger.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 5,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<a {!! $attributes->merge(['class' => 'text-red-600 hover:text-red-700 cursor-pointer']) !!}>\r\n    {{ $slot }}\r\n</a>"
            },
            "item_6": {
                "path": "resources/views/components/ui",
                "name": "/action/index.blade.php",
                "fullPath": "resources/views/components/ui//action/index.blade.php",
                "template": "blade/ui/action/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 6,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<a {!! $attributes->merge(['class' => 'text-indigo-600 hover:text-indigo-700 cursor-pointer']) !!}>\r\n    {{ $slot }}\r\n</a>"
            },
            "item_7": {
                "path": "resources/views/components/ui",
                "name": "/breadcrumbs/index.blade.php",
                "fullPath": "resources/views/components/ui//breadcrumbs/index.blade.php",
                "template": "blade/ui/breadcrumbs/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 7,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<nav class=\"flex justify-between py-1\">\r\n    <ol class=\"inline-flex items-center mb-3 space-x-1 text-xs text-neutral-500 [&_.active-breadcrumb]:text-neutral-600 [&_.active-breadcrumb]:font-medium sm:mb-0\"> \r\n        {{ $slot }}\r\n    </ol>\r\n</nav>"
            },
            "item_8": {
                "path": "resources/views/components/ui",
                "name": "/breadcrumbs/link.blade.php",
                "fullPath": "resources/views/components/ui//breadcrumbs/link.blade.php",
                "template": "blade/ui/breadcrumbs/Link.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 8,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "@props([\r\n    'href' => false,\r\n    'active' => false,\r\n])\r\n\r\n<li class=\"\">\r\n    <a \r\n        @if($href)\r\n            wire:navigate\r\n            href=\"{{ $href }}\"\r\n        @endif\r\n        class=\"inline-flex items-center py-1 font-normal hover:text-neutral-900 focus:outline-none {{ $active ? 'active-breadcrumb' : '' }}\"\r\n    >\r\n        {{ $slot }}\r\n    </a>\r\n</li>"
            },
            "item_9": {
                "path": "resources/views/components/ui",
                "name": "/breadcrumbs/separator.blade.php",
                "fullPath": "resources/views/components/ui//breadcrumbs/separator.blade.php",
                "template": "blade/ui/breadcrumbs/Separator.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 9,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<svg class=\"w-5 h-5 text-gray-400/70\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g fill=\"none\" stroke=\"none\"><path d=\"M10 8.013l4 4-4 4\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg>"
            },
            "item_10": {
                "path": "resources/views/components/ui",
                "name": "/button/danger.blade.php",
                "fullPath": "resources/views/components/ui//button/danger.blade.php",
                "template": "blade/ui/button/Danger.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 10,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<button {{ $attributes->merge(['type' => 'button', 'class' => 'inline-flex items-center justify-center px-4 py-2 bg-red-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-red-500 active:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 transition ease-in-out duration-150']) }}>\r\n    {{ $slot }}\r\n</button>"
            },
            "item_11": {
                "path": "resources/views/components/ui",
                "name": "/button/index.blade.php",
                "fullPath": "resources/views/components/ui//button/index.blade.php",
                "template": "blade/ui/button/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 11,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<button {{ $attributes->merge(['type' => 'submit', 'class' => 'inline-flex items-center justify-center px-4 py-2 text-sm font-medium tracking-wide text-white transition-colors duration-200 rounded-md bg-indigo-500 hover:bg-indigo-600 focus:ring-2 focus:ring-offset-2 focus:ring-gray-900 focus:shadow-outline focus:outline-none']) }}>\r\n    {{ $slot }}\r\n</button>"
            },
            "item_12": {
                "path": "resources/views/components/ui",
                "name": "/card/body.blade.php",
                "fullPath": "resources/views/components/ui//card/body.blade.php",
                "template": "blade/ui/card/Body.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 12,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": ""
            },
            "item_13": {
                "path": "resources/views/components/ui",
                "name": "/card/header.blade.php",
                "fullPath": "resources/views/components/ui//card/header.blade.php",
                "template": "blade/ui/card/Header.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 13,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": ""
            },
            "item_14": {
                "path": "resources/views/components/ui",
                "name": "/card/index.blade.php",
                "fullPath": "resources/views/components/ui//card/index.blade.php",
                "template": "blade/ui/card/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 14,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": ""
            },
            "item_15": {
                "path": "resources/views/components/ui",
                "name": "/card/title.blade.php",
                "fullPath": "resources/views/components/ui//card/title.blade.php",
                "template": "blade/ui/card/Title.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 15,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": ""
            },
            "item_16": {
                "path": "resources/views/components/ui",
                "name": "/container/table.blade.php",
                "fullPath": "resources/views/components/ui//container/table.blade.php",
                "template": "blade/ui/container/Table.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 16,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<div class=\"flex flex-col\">\r\n    <div class=\"overflow-x-auto\">\r\n        <div class=\"inline-block min-w-full\">\r\n            {{ $slot }}\r\n        </div>\r\n    </div>\r\n</div>\r\n"
            },
            "item_17": {
                "path": "resources/views/components/ui",
                "name": "/input/checkbox.blade.php",
                "fullPath": "resources/views/components/ui//input/checkbox.blade.php",
                "template": "blade/ui/input/Checkbox.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 17,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "@props(['disabled' => false])\r\n\r\n<input \r\n    {{ $disabled ? 'disabled' : '' }} \r\n    type=\"checkbox\"\r\n    {!! $attributes->merge(['class' => '']) !!}\r\n>"
            },
            "item_18": {
                "path": "resources/views/components/ui",
                "name": "/input/color.blade.php",
                "fullPath": "resources/views/components/ui//input/color.blade.php",
                "template": "blade/ui/input/Color.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 18,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "@props(['disabled' => false])\r\n\r\n<x-ui.input \r\n    :disabled=\"$disabled\" \r\n    type=\"color\"\r\n    :attributes=\"$attributes\"\r\n/>"
            },
            "item_19": {
                "path": "resources/views/components/ui",
                "name": "/input/date.blade.php",
                "fullPath": "resources/views/components/ui//input/date.blade.php",
                "template": "blade/ui/input/Date.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 19,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "@props(['disabled' => false])\r\n\r\n<x-ui.input \r\n    :disabled=\"$disabled\" \r\n    type=\"date\"\r\n    :attributes=\"$attributes\"\r\n/>"
            },
            "item_20": {
                "path": "resources/views/components/ui",
                "name": "/input/date-time.blade.php",
                "fullPath": "resources/views/components/ui//input/date-time.blade.php",
                "template": "blade/ui/input/DateTime.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 20,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "@props(['disabled' => false])\r\n\r\n<x-ui.input \r\n    :disabled=\"$disabled\" \r\n    type=\"datetime-local\"\r\n    :attributes=\"$attributes\"\r\n/>"
            },
            "item_21": {
                "path": "resources/views/components/ui",
                "name": "/input/email.blade.php",
                "fullPath": "resources/views/components/ui//input/email.blade.php",
                "template": "blade/ui/input/Email.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 21,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "@props(['disabled' => false])\r\n\r\n<x-ui.input \r\n    :disabled=\"$disabled\" \r\n    type=\"email\"\r\n    :attributes=\"$attributes\"\r\n/>"
            },
            "item_22": {
                "path": "resources/views/components/ui",
                "name": "/input/error.blade.php",
                "fullPath": "resources/views/components/ui//input/error.blade.php",
                "template": "blade/ui/input/Error.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 22,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "@props(['for'])\r\n\r\n@error($for)\r\n    <p {{ $attributes->merge(['class' => 'text-sm text-red-600']) }}>{{ $message }}</p>\r\n@enderror\r\n"
            },
            "item_23": {
                "path": "resources/views/components/ui",
                "name": "/input/file.blade.php",
                "fullPath": "resources/views/components/ui//input/file.blade.php",
                "template": "blade/ui/input/File.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 23,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "@props([\r\n    'src' => '',\r\n    'accept' => '*',\r\n])\r\n\r\n<div {!! $attributes->except(['wire:model']) !!} x-data=\"{\r\n    fileUrl: '{{ $src }}',\r\n    file: null,\r\n    fileInput: null,\r\n    initFileInput() {\r\n        this.fileInput = this.$el.querySelector('input[type=file]')\r\n\r\n        this.fileInput.addEventListener('change', () => {\r\n            this.file = this.fileInput.files[0]\r\n            this.fileUrl = URL.createObjectURL(this.file)\r\n        })\r\n    },\r\n    destroyFileInput() {\r\n        this.fileInput.removeEventListener('change')\r\n    },\r\n    remove() {\r\n        if (!confirm('Are you sure?')) return\r\n\r\n        this.fileUrl = ''\r\n        this.file = null\r\n        this.fileInput.value = ''\r\n\r\n        this.$dispatch('removed')\r\n    }\r\n}\" x-init=\"initFileInput\" x-on:destroy.window=\"destroyFileInput\">\r\n    <div class=\"mb-2\">\r\n        {{-- Show the filename --}}\r\n        <template x-if=\"file\">\r\n            <div class=\"text-sm text-gray-500 p-1 rounded-sm bg-gray-50 border border-gray-200 mb-1\" x-text=\"file.name\"></div>\r\n        </template>\r\n\r\n        {{-- File selector --}}\r\n        <input style=\"display: none;\" type=\"file\" accept=\"{{ $accept }}\" {!! $attributes->only([ 'wire:model']) !!}>\r\n\r\n        {{-- Upload and remove buttons --}}\r\n        <div>\r\n            <button type=\"button\" class=\"p-0.5 px-1 text-xs border border-gray-200 rounded hover:bg-gray-200\" @click.stop=\"fileInput.click()\">Upload</button>\r\n            <button type=\"button\" class=\"p-0.5 px-1 text-xs border border-gray-200 rounded hover:bg-gray-200\" x-show=\"fileUrl\" @click.stop=\"remove()\">Remove</button>\r\n        </div>\r\n    </div>\r\n</div>"
            },
            "item_24": {
                "path": "resources/views/components/ui",
                "name": "/input/hidden.blade.php",
                "fullPath": "resources/views/components/ui//input/hidden.blade.php",
                "template": "blade/ui/input/Hidden.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 24,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "@props(['disabled' => false])\r\n\r\n<x-ui.input \r\n    :disabled=\"$disabled\" \r\n    type=\"hidden\"\r\n    :attributes=\"$attributes\"\r\n/>"
            },
            "item_25": {
                "path": "resources/views/components/ui",
                "name": "/input/image.blade.php",
                "fullPath": "resources/views/components/ui//input/image.blade.php",
                "template": "blade/ui/input/Image.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 25,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "@props([\r\n    'src' => '',\r\n    'accept' => 'image/*',\r\n])\r\n\r\n<div {!! $attributes->except(['wire:model']) !!} x-data=\"{\r\n    imageUrl: '{{ $src }}',\r\n    imageFile: null,\r\n    imageInput: null,\r\n    initFileInput() {\r\n        this.imageInput = this.$el.querySelector('input[type=file]')\r\n\r\n        this.imageInput.addEventListener('change', () => {\r\n            this.imageFile = this.imageInput.files[0]\r\n            this.imageUrl = URL.createObjectURL(this.imageFile)\r\n        })\r\n    },\r\n    destroyFileInput() {\r\n        this.imageInput.removeEventListener('change')\r\n    },\r\n    remove() {\r\n        if (!confirm('Are you sure?')) return\r\n\r\n        this.imageUrl = ''\r\n        this.imageFile = null\r\n        this.imageInput.value = ''\r\n\r\n        this.$dispatch('removed')\r\n    }\r\n}\" x-init=\"initFileInput\" x-on:destroy.window=\"destroyFileInput\">\r\n    <div class=\"mb-2\">\r\n\r\n        {{-- Show the image --}}\r\n        <template x-if=\"imageUrl\">\r\n            <img @click.stop=\"imageInput.click()\" :src=\"imageUrl\" class=\"object-cover rounded border border-gray-200 w-36 h-36 cursor-pointer bg-gray-50 hover:opacity-75 transition duration-100 ease-in-out\">\r\n        </template>\r\n\r\n        {{-- Show the gray box when image is not available --}}\r\n        <template x-if=\"!imageUrl\">\r\n            <div @click.stop=\"imageInput.click()\" class=\"object-cover rounded border border-gray-200 w-36 h-36 cursor-pointer bg-gray-50 hover:opacity-75 transition duration-100 ease-in-out\"></div>\r\n        </template>\r\n\r\n        {{-- Image file selector --}}\r\n        <input style=\"display: none;\" type=\"file\" accept=\"{{ $accept }}\" {!! $attributes->only([ 'wire:model']) !!}>\r\n\r\n        {{-- Upload and remove buttons --}}\r\n        <div>\r\n            <button type=\"button\" class=\"p-0.5 px-1 text-xs border border-gray-200 rounded hover:bg-gray-200\" @click.stop=\"imageInput.click()\">Upload</button>\r\n            <button type=\"button\" class=\"p-0.5 px-1 text-xs border border-gray-200 rounded hover:bg-gray-200\" x-show=\"imageUrl\" @click.stop=\"remove()\">Remove</button>\r\n        </div>\r\n    </div>\r\n</div>"
            },
            "item_26": {
                "path": "resources/views/components/ui",
                "name": "/input/index.blade.php",
                "fullPath": "resources/views/components/ui//input/index.blade.php",
                "template": "blade/ui/input/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 26,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "@props(['disabled' => false])\r\n\r\n<input \r\n    {{ $disabled ? 'disabled' : '' }} \r\n    {!! $attributes->merge(['class' => 'inline-flex h-10 px-3 py-2 text-sm bg-white border rounded-md border-gray-300 ring-offset-background placeholder:text-gray-500 focus:border-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 disabled:cursor-not-allowed disabled:opacity-50']) !!}\r\n>\r\n"
            },
            "item_27": {
                "path": "resources/views/components/ui",
                "name": "/input/number.blade.php",
                "fullPath": "resources/views/components/ui//input/number.blade.php",
                "template": "blade/ui/input/Number.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 27,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "@props(['disabled' => false])\r\n\r\n<x-ui.input \r\n    :disabled=\"$disabled\" \r\n    type=\"number\"\r\n    :attributes=\"$attributes\"\r\n/>"
            },
            "item_28": {
                "path": "resources/views/components/ui",
                "name": "/input/password.blade.php",
                "fullPath": "resources/views/components/ui//input/password.blade.php",
                "template": "blade/ui/input/Password.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 28,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "@props(['disabled' => false])\r\n\r\n<x-ui.input \r\n    :disabled=\"$disabled\" \r\n    type=\"password\"\r\n    :attributes=\"$attributes\"\r\n/>"
            },
            "item_29": {
                "path": "resources/views/components/ui",
                "name": "/input/radio.blade.php",
                "fullPath": "resources/views/components/ui//input/radio.blade.php",
                "template": "blade/ui/input/Radio.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 29,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "@props(['disabled' => false])\r\n\r\n<input \r\n    :disabled=\"$disabled\" \r\n    type=\"radio\"\r\n    {!! $attributes->merge(['class' => '!w-4 !h-4 text-indigo-600 transition duration-150 ease-in-out border-gray-300 rounded-md focus:ring-indigo-500']) !!}\r\n/>"
            },
            "item_30": {
                "path": "resources/views/components/ui",
                "name": "/input/select.blade.php",
                "fullPath": "resources/views/components/ui//input/select.blade.php",
                "template": "blade/ui/input/Select.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 30,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "@props(['disabled' => false])\r\n\r\n<select \r\n    {{ $disabled ? 'disabled' : '' }} \r\n    {!! $attributes->merge(['class' => 'inline-flex h-10 px-3 py-2 text-sm bg-white border rounded-md border-gray-300 ring-offset-background placeholder:text-gray-500 focus:border-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 disabled:cursor-not-allowed disabled:opacity-50']) !!}\r\n>\r\n    {{ $slot }}\r\n</select>"
            },
            "item_31": {
                "path": "resources/views/components/ui",
                "name": "/input/text.blade.php",
                "fullPath": "resources/views/components/ui//input/text.blade.php",
                "template": "blade/ui/input/Text.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 31,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "@props(['disabled' => false])\r\n\r\n<x-ui.input \r\n    :disabled=\"$disabled\" \r\n    type=\"text\"\r\n    :attributes=\"$attributes\"\r\n/>"
            },
            "item_32": {
                "path": "resources/views/components/ui",
                "name": "/input/textarea.blade.php",
                "fullPath": "resources/views/components/ui//input/textarea.blade.php",
                "template": "blade/ui/input/Textarea.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 32,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "@props(['disabled' => false])\r\n\r\n<textarea \r\n    {{ $disabled ? 'disabled' : '' }} \r\n    {!! $attributes->merge(['class' => 'inline-flex h-10 px-3 py-2 text-sm bg-white border rounded-md border-gray-300 ring-offset-background placeholder:text-gray-500 focus:border-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 disabled:cursor-not-allowed disabled:opacity-50']) !!}\r\n></textarea>"
            },
            "item_33": {
                "path": "resources/views/components/ui",
                "name": "/input/time.blade.php",
                "fullPath": "resources/views/components/ui//input/time.blade.php",
                "template": "blade/ui/input/Time.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 33,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "@props(['disabled' => false])\r\n\r\n<x-ui.input \r\n    :disabled=\"$disabled\" \r\n    type=\"time\"\r\n    :attributes=\"$attributes\"\r\n/>"
            },
            "item_34": {
                "path": "resources/views/components/ui",
                "name": "/input/url.blade.php",
                "fullPath": "resources/views/components/ui//input/url.blade.php",
                "template": "blade/ui/input/Url.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 34,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "@props(['disabled' => false])\r\n\r\n<x-ui.input \r\n    :disabled=\"$disabled\" \r\n    type=\"url\"\r\n    :attributes=\"$attributes\"\r\n/>"
            },
            "item_35": {
                "path": "resources/views/components/ui",
                "name": "/label/index.blade.php",
                "fullPath": "resources/views/components/ui//label/index.blade.php",
                "template": "blade/ui/label/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 35,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "@props(['value'])\r\n\r\n<label {{ $attributes->merge(['class' => 'block mb-1.5 font-medium text-sm text-gray-700']) }}>\r\n    {{ $value ?? $slot }}\r\n</label>"
            },
            "item_36": {
                "path": "resources/views/components/ui",
                "name": "/modal/confirm.blade.php",
                "fullPath": "resources/views/components/ui//modal/confirm.blade.php",
                "template": "blade/ui/modal/Confirm.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 36,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "@props(['id' => null, 'maxWidth' => null])\r\n\r\n<x-ui.modal :id=\"$id\" :maxWidth=\"$maxWidth\" {{ $attributes }}>\r\n    <div class=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n        <div class=\"sm:flex sm:items-start\">\r\n            <div class=\"mx-auto shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10\">\r\n                <svg class=\"h-6 w-6 text-red-600\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\">\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z\" />\r\n                </svg>\r\n            </div>\r\n\r\n            <div class=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\r\n                <h3 class=\"text-lg font-medium text-gray-900\">\r\n                    {{ $title }}\r\n                </h3>\r\n\r\n                <div class=\"mt-4 text-sm text-gray-600\">\r\n                    {{ $content }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"flex flex-row justify-between p-4 bg-gray-100 text-right\">\r\n        {{ $footer }}\r\n    </div>\r\n</x-ui.modal>"
            },
            "item_37": {
                "path": "resources/views/components/ui",
                "name": "/modal/index.blade.php",
                "fullPath": "resources/views/components/ui//modal/index.blade.php",
                "template": "blade/ui/modal/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 37,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "@props(['id', 'maxWidth'])\r\n\r\n@php\r\n$id = $id ?? md5($attributes->wire('model'));\r\n\r\n$maxWidth = [\r\n    'sm' => 'sm:max-w-sm',\r\n    'md' => 'sm:max-w-md',\r\n    'lg' => 'sm:max-w-lg',\r\n    'xl' => 'sm:max-w-xl',\r\n    '2xl' => 'sm:max-w-2xl',\r\n][$maxWidth ?? '2xl'];\r\n@endphp\r\n\r\n<div\r\n    x-data=\"{ show: @entangle($attributes->wire('model')) }\"\r\n    x-on:close.stop=\"show = false\"\r\n    x-on:keydown.escape.window=\"show = false\"\r\n    x-show=\"show\"\r\n    id=\"{{ $id }}\"\r\n    class=\"jetstream-modal fixed inset-0 overflow-y-auto px-4 py-6 sm:px-0 z-50\"\r\n    style=\"display: none;\"\r\n>\r\n    <div x-show=\"show\" class=\"fixed inset-0 transform transition-all\" x-on:click=\"show = false\" x-transition:enter=\"ease-out duration-300\"\r\n                    x-transition:enter-start=\"opacity-0\"\r\n                    x-transition:enter-end=\"opacity-100\"\r\n                    x-transition:leave=\"ease-in duration-200\"\r\n                    x-transition:leave-start=\"opacity-100\"\r\n                    x-transition:leave-end=\"opacity-0\">\r\n        <div class=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\r\n    </div>\r\n\r\n    <div x-show=\"show\" \r\n        class=\"mb-6 bg-white rounded-lg overflow-hidden shadow-xl transform transition-all sm:w-full {{ $maxWidth }} sm:mx-auto\"\r\n        x-trap.inert.noscroll=\"show\"\r\n        x-transition:enter=\"ease-out duration-300\"\r\n        x-transition:enter-start=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n        x-transition:enter-end=\"opacity-100 translate-y-0 sm:scale-100\"\r\n        x-transition:leave=\"ease-in duration-200\"\r\n        x-transition:leave-start=\"opacity-100 translate-y-0 sm:scale-100\"\r\n        x-transition:leave-end=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\">\r\n        {{ $slot }}\r\n    </div>\r\n</div>\r\n"
            },
            "item_38": {
                "path": "resources/views/components/ui",
                "name": "/table/action-column.blade.php",
                "fullPath": "resources/views/components/ui//table/action-column.blade.php",
                "template": "blade/ui/table/ActionColumn.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 38,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<td {!! $attributes->merge(['class' => 'px-5 py-4 text-sm font-medium text-right whitespace-nowrap space-x-2']) !!}>\r\n    {{ $slot }}\r\n</td>"
            },
            "item_39": {
                "path": "resources/views/components/ui",
                "name": "/table/action-header.blade.php",
                "fullPath": "resources/views/components/ui//table/action-header.blade.php",
                "template": "blade/ui/table/ActionHeader.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 39,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<th {!! $attributes->merge(['class' => 'px-5 py-3 text-xs font-medium text-right uppercase']) !!}>\r\n    {{ $slot }}\r\n</th>"
            },
            "item_40": {
                "path": "resources/views/components/ui",
                "name": "/table/column.blade.php",
                "fullPath": "resources/views/components/ui//table/column.blade.php",
                "template": "blade/ui/table/Column.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 40,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "@props([\r\n    'forCrud' => false\r\n])\r\n\r\n@php\r\n$allClasses = [\r\n    'px-5 py-3 text-xs font-medium text-left uppercase' => true,\r\n    'max-w-xs truncate' => $forCrud,\r\n];\r\n\r\n$classes = join(' ', array_keys(array_filter($allClasses)));\r\n@endphp\r\n\r\n<td {!! $attributes->merge(['class' => 'px-5 py-4 text-sm whitespace-nowrap']) !!}>\r\n    {{ $slot }}\r\n</td>"
            },
            "item_41": {
                "path": "resources/views/components/ui",
                "name": "/table/header.blade.php",
                "fullPath": "resources/views/components/ui//table/header.blade.php",
                "template": "blade/ui/table/Header.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 41,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "@props([\r\n    'forCrud' => false\r\n])\r\n\r\n@php\r\n$allClasses = [\r\n    'px-5 py-3 text-xs font-medium text-left uppercase' => true,\r\n    'cursor-pointer' => $forCrud,\r\n];\r\n\r\n$classes = join(' ', array_keys(array_filter($allClasses)));\r\n@endphp\r\n\r\n<th {!! $attributes->merge(['class' => $classes]) !!}>\r\n    {{ $slot }}\r\n</th>"
            },
            "item_42": {
                "path": "resources/views/components/ui",
                "name": "/table/image.blade.php",
                "fullPath": "resources/views/components/ui//table/image.blade.php",
                "template": "blade/ui/table/Image.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 42,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "@props([\r\n    'url' => '',\r\n    'alt' => ''\r\n])\r\n\r\n<img\r\n    src=\"{{ $url }}\"\r\n    alt=\"{{ $alt }}\"\r\n    class=\"w-12 h-12 rounded-lg bg-center\"\r\n/>"
            },
            "item_43": {
                "path": "resources/views/components/ui",
                "name": "/table/index.blade.php",
                "fullPath": "resources/views/components/ui//table/index.blade.php",
                "template": "blade/ui/table/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 43,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "@props([\r\n    'head',\r\n    'body',\r\n    'foot'\r\n])\r\n\r\n<div class=\"overflow-hidden border rounded-lg\">\r\n    <table {!! $attributes->merge(['class' => 'min-w-full divide-y divide-gray-200']) !!}>\r\n        @if(isset($head))\r\n        <thead class=\"bg-gray-50\">\r\n            <tr class=\"text-gray-500\">\r\n                {{ $head }}\r\n            </tr>\r\n        </thead>\r\n        @endif\r\n\r\n        @if(isset($body))\r\n        <tbody class=\"bg-white divide-y divide-gray-200 dark:divide-gray-700\">\r\n            {{ $body }}\r\n        </tbody>\r\n        @endif\r\n\r\n        @if(isset($foot))\r\n        <tfoot class=\"\">\r\n            {{ $foot }}\r\n        </tfoot>\r\n        @endif\r\n    </table>\r\n    \r\n</div>"
            },
            "item_44": {
                "path": "resources/views/components/ui",
                "name": "/table/row.blade.php",
                "fullPath": "resources/views/components/ui//table/row.blade.php",
                "template": "blade/ui/table/Row.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 44,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<tr {!! $attributes->merge(['class' => 'text-gray-800']) !!}>\r\n    {{ $slot }}\r\n</tr>"
            },
            "item_45": {
                "path": "resources/views/partials",
                "name": "app-menu.blade.php",
                "fullPath": "resources/views/partials/app-menu.blade.php",
                "template": "menu/AppMenu.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 45,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<div class=\"hidden sm:flex sm:items-center sm:ml-6\">\n    <div class=\"ml-3 relative\">\n        <x-dropdown align=\"right\" width=\"48\">\n            <x-slot name=\"trigger\">\n                <span class=\"inline-flex rounded-md\">\n                    <button\n                        type=\"button\"\n                        class=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:text-gray-700 focus:outline-none focus:bg-gray-50 active:bg-gray-50 transition ease-in-out duration-150\"\n                    >\n                        {{ __('navigation.home') }}\n\n                        <svg\n                            class=\"ml-2 -mr-0.5 h-4 w-4\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            stroke-width=\"1.5\"\n                            stroke=\"currentColor\"\n                        >\n                            <path\n                                stroke-linecap=\"round\"\n                                stroke-linejoin=\"round\"\n                                d=\"M19.5 8.25l-7.5 7.5-7.5-7.5\"\n                            />\n                        </svg>\n                    </button>\n                </span>\n            </x-slot>\n\n            <x-slot name=\"content\">\n                <x-dropdown-link> No items found </x-dropdown-link>\n            </x-slot>\n        </x-dropdown>\n    </div>\n    <div class=\"ml-3 relative\">\n        <x-dropdown align=\"right\" width=\"48\">\n            <x-slot name=\"trigger\">\n                <span class=\"inline-flex rounded-md\">\n                    <button\n                        type=\"button\"\n                        class=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:text-gray-700 focus:outline-none focus:bg-gray-50 active:bg-gray-50 transition ease-in-out duration-150\"\n                    >\n                        {{ __('navigation.apps') }}\n\n                        <svg\n                            class=\"ml-2 -mr-0.5 h-4 w-4\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            stroke-width=\"1.5\"\n                            stroke=\"currentColor\"\n                        >\n                            <path\n                                stroke-linecap=\"round\"\n                                stroke-linejoin=\"round\"\n                                d=\"M19.5 8.25l-7.5 7.5-7.5-7.5\"\n                            />\n                        </svg>\n                    </button>\n                </span>\n            </x-slot>\n\n            <x-slot name=\"content\">\n                @can('view-any', App\\Models\\User::class)\n                <x-dropdown-link\n                    wire:navigate\n                    href=\"{{ route('dashboard.users.index') }}\"\n                >\n                    {{ __('navigation.users') }}\n                </x-dropdown-link>\n                @endcan @can('view-any', App\\Models\\Formulir::class)\n                <x-dropdown-link\n                    wire:navigate\n                    href=\"{{ route('dashboard.formulirs.index') }}\"\n                >\n                    {{ __('navigation.formulirs') }}\n                </x-dropdown-link>\n                @endcan\n            </x-slot>\n        </x-dropdown>\n    </div>\n</div>\n"
            },
            "item_46": {
                "path": "resources/views/partials",
                "name": "app-responsive-menu.blade.php",
                "fullPath": "resources/views/partials/app-responsive-menu.blade.php",
                "template": "menu/AppResponsiveMenu.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 46,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "@can('view-any', App\\Models\\User::class)\n<x-responsive-nav-link\n    href=\"{{ route('dashboard.users.index') }}\"\n    :active=\"request()->routeIs('dashboard.users.index')\"\n>\n    {{ __('navigation.users') }}\n</x-responsive-nav-link>\n@endcan @can('view-any', App\\Models\\Formulir::class)\n<x-responsive-nav-link\n    href=\"{{ route('dashboard.formulirs.index') }}\"\n    :active=\"request()->routeIs('dashboard.formulirs.index')\"\n>\n    {{ __('navigation.formulirs') }}\n</x-responsive-nav-link>\n@endcan\n"
            },
            "item_47": {
                "path": "database/factories",
                "name": "MembershipFactory.php",
                "fullPath": "database/factories/MembershipFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 47,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Membership;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass MembershipFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Membership::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'team_id' => fake()->randomNumber(),\n            'user_id' => fake()->randomNumber(),\n            'role' => fake()->text(255),\n        ];\n    }\n}\n"
            },
            "item_48": {
                "path": "database/seeders",
                "name": "MembershipSeeder.php",
                "fullPath": "database/seeders/MembershipSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 48,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Membership;\nuse Illuminate\\Database\\Seeder;\n\nclass MembershipSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Membership::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_49": {
                "path": "app/Policies",
                "name": "MembershipPolicy.php",
                "fullPath": "app/Policies/MembershipPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 49,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Membership;\n\nclass MembershipPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, Membership $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, Membership $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, Membership $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, Membership $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, Membership $model): bool\n    {\n        return true;\n    }\n}\n"
            },
            "item_50": {
                "path": "database/factories",
                "name": "TeamFactory.php",
                "fullPath": "database/factories/TeamFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "ignoreConflicts": false,
                "id": 50,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Team;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass TeamFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Team::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'user_id' => fake()->randomNumber(),\n            'name' => fake()->name(),\n            'personal_team' => fake()->boolean(),\n        ];\n    }\n}\n",
                "conflictFileName": "5Pa99ERYldvWa8nc9v2LFSaJveNnDxdd.json"
            },
            "item_51": {
                "path": "database/seeders",
                "name": "TeamSeeder.php",
                "fullPath": "database/seeders/TeamSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 51,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Team;\nuse Illuminate\\Database\\Seeder;\n\nclass TeamSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Team::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_52": {
                "path": "app/Policies",
                "name": "TeamPolicy.php",
                "fullPath": "app/Policies/TeamPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "ignoreConflicts": false,
                "id": 52,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\Team;\nuse App\\Models\\User;\n\nclass TeamPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, Team $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, Team $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, Team $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, Team $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, Team $model): bool\n    {\n        return true;\n    }\n}\n",
                "conflictFileName": "1gmH4yzBgpy0SOQESfzOs10cFIDJfjSe.json"
            },
            "item_53": {
                "path": "database/factories",
                "name": "TeamInvitationFactory.php",
                "fullPath": "database/factories/TeamInvitationFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 53,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse Illuminate\\Support\\Str;\nuse App\\Models\\TeamInvitation;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass TeamInvitationFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = TeamInvitation::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'email' => fake()\n                ->unique()\n                ->safeEmail(),\n            'role' => fake()->text(255),\n            'team_id' => \\App\\Models\\Team::factory(),\n        ];\n    }\n}\n"
            },
            "item_54": {
                "path": "database/seeders",
                "name": "TeamInvitationSeeder.php",
                "fullPath": "database/seeders/TeamInvitationSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 54,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\TeamInvitation;\nuse Illuminate\\Database\\Seeder;\n\nclass TeamInvitationSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        TeamInvitation::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_55": {
                "path": "app/Policies",
                "name": "TeamInvitationPolicy.php",
                "fullPath": "app/Policies/TeamInvitationPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 55,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\TeamInvitation;\n\nclass TeamInvitationPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, TeamInvitation $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, TeamInvitation $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, TeamInvitation $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, TeamInvitation $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, TeamInvitation $model): bool\n    {\n        return true;\n    }\n}\n"
            },
            "item_56": {
                "path": "database/factories",
                "name": "UserFactory.php",
                "fullPath": "database/factories/UserFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "ignoreConflicts": false,
                "id": 56,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\User;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass UserFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = User::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => fake()->name(),\n            'email' => fake()\n                ->unique()\n                ->safeEmail(),\n            'email_verified_at' => now(),\n            'password' => \\Hash::make('password'),\n            'two_factor_secret' => fake()->text(),\n            'two_factor_recovery_codes' => fake()->text(),\n            'remember_token' => \\Str::random(10),\n        ];\n    }\n\n    /**\n     * Indicate that the model's email address should be unverified.\n     */\n    public function unverified(): Factory\n    {\n        return $this->state(function (array $attributes) {\n            return [\n                'email_verified_at' => null,\n            ];\n        });\n    }\n}\n",
                "conflictFileName": "39VoWlYL4MSj8YBzrPkqZjS18y58ZEjT.json"
            },
            "item_57": {
                "path": "database/seeders",
                "name": "UserSeeder.php",
                "fullPath": "database/seeders/UserSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 57,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\User;\nuse Illuminate\\Database\\Seeder;\n\nclass UserSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        User::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_58": {
                "path": "app/Policies",
                "name": "UserPolicy.php",
                "fullPath": "app/Policies/UserPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 58,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\n\nclass UserPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, User $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, User $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, User $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, User $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, User $model): bool\n    {\n        return true;\n    }\n}\n"
            },
            "item_59": {
                "path": "resources/views/livewire/dashboard/users",
                "name": "index.blade.php",
                "fullPath": "resources/views/livewire/dashboard/users/index.blade.php",
                "template": "crud/views/livewire/IndexView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 59,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >{{ __('crud.users.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"flex justify-between align-top py-4\">\n        <x-ui.input\n            wire:model.live=\"search\"\n            type=\"text\"\n            placeholder=\"Search {{ __('crud.users.collectionTitle') }}...\"\n        />\n\n        @can('create', App\\Models\\User::class)\n        <a wire:navigate href=\"{{ route('dashboard.users.create') }}\">\n            <x-ui.button>New</x-ui.button>\n        </a>\n        @endcan\n    </div>\n\n    {{-- Delete Modal --}}\n    <x-ui.modal.confirm wire:model=\"confirmingDeletion\">\n        <x-slot name=\"title\"> {{ __('Delete') }} </x-slot>\n\n        <x-slot name=\"content\"> {{ __('Are you sure?') }} </x-slot>\n\n        <x-slot name=\"footer\">\n            <x-ui.button\n                wire:click=\"$toggle('confirmingDeletion')\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Cancel') }}\n            </x-ui.button>\n\n            <x-ui.button.danger\n                class=\"ml-3\"\n                wire:click=\"delete({{ $deletingUser }})\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Delete') }}\n            </x-ui.button.danger>\n        </x-slot>\n    </x-ui.modal.confirm>\n\n    {{-- Index Table --}}\n    <x-ui.container.table>\n        <x-ui.table>\n            <x-slot name=\"head\">\n                <x-ui.table.header for-crud wire:click=\"sortBy('name')\"\n                    >{{ __('crud.users.inputs.name.label') }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('email')\"\n                    >{{ __('crud.users.inputs.email.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.action-header>Actions</x-ui.table.action-header>\n            </x-slot>\n\n            <x-slot name=\"body\">\n                @forelse ($users as $user)\n                <x-ui.table.row wire:loading.class.delay=\"opacity-75\">\n                    <x-ui.table.column for-crud\n                        >{{ $user->name }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $user->email }}</x-ui.table.column\n                    >\n                    <x-ui.table.action-column>\n                        @can('update', $user)\n                        <x-ui.action\n                            wire:navigate\n                            href=\"{{ route('dashboard.users.edit', $user) }}\"\n                            >Edit</x-ui.action\n                        >\n                        @endcan @can('delete', $user)\n                        <x-ui.action.danger\n                            wire:click=\"confirmDeletion({{ $user->id }})\"\n                            >Delete</x-ui.action.danger\n                        >\n                        @endcan\n                    </x-ui.table.action-column>\n                </x-ui.table.row>\n                @empty\n                <x-ui.table.row>\n                    <x-ui.table.column colspan=\"3\"\n                        >No {{ __('crud.users.collectionTitle') }} found.</x-ui.table.column\n                    >\n                </x-ui.table.row>\n                @endforelse\n            </x-slot>\n        </x-ui.table>\n\n        <div class=\"mt-2\">{{ $users->links() }}</div>\n    </x-ui.container.table>\n</div>\n"
            },
            "item_60": {
                "path": "app/Livewire/Dashboard",
                "name": "UserIndex.php",
                "fullPath": "app/Livewire/Dashboard/UserIndex.php",
                "template": "crud/views/livewire/IndexComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 60,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse App\\Models\\User;\nuse Livewire\\Component;\nuse Livewire\\WithPagination;\n\nclass UserIndex extends Component\n{\n    use WithPagination;\n\n    public $search;\n    public $sortField = 'updated_at';\n    public $sortDirection = 'desc';\n\n    public $queryString = ['search', 'sortField', 'sortDirection'];\n\n    public $confirmingDeletion = false;\n    public $deletingUser;\n\n    public function updatingSearch()\n    {\n        $this->resetPage();\n    }\n\n    public function confirmDeletion(string $id)\n    {\n        $this->deletingUser = $id;\n\n        $this->confirmingDeletion = true;\n    }\n\n    public function delete(User $user)\n    {\n        $user->delete();\n\n        $this->confirmingDeletion = false;\n    }\n\n    public function sortBy($field)\n    {\n        if ($this->sortField === $field) {\n            $this->sortDirection =\n                $this->sortDirection === 'asc' ? 'desc' : 'asc';\n        } else {\n            $this->sortDirection = 'asc';\n        }\n\n        $this->sortField = $field;\n    }\n\n    public function getRowsProperty()\n    {\n        return $this->rowsQuery->paginate(5);\n    }\n\n    public function getRowsQueryProperty()\n    {\n        return User::query()\n            ->orderBy($this->sortField, $this->sortDirection)\n            ->where('name', 'like', \"%{$this->search}%\");\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.users.index', [\n            'users' => $this->rows,\n        ]);\n    }\n}\n"
            },
            "item_61": {
                "path": "resources/views/livewire/dashboard/users",
                "name": "create.blade.php",
                "fullPath": "resources/views/livewire/dashboard/users/create.blade.php",
                "template": "crud/views/livewire/CreateView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 61,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link href=\"{{ route('dashboard.users.index') }}\"\n            >{{ __('crud.users.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Create {{ __('crud.users.itemTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Create {{ __('crud.users.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"name\"\n                        >{{ __('crud.users.inputs.name.label') }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.name\"\n                        name=\"name\"\n                        id=\"name\"\n                        placeholder=\"{{ __('crud.users.inputs.name.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.name\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"email\"\n                        >{{ __('crud.users.inputs.email.label') }}</x-ui.label\n                    >\n                    <x-ui.input.email\n                        class=\"w-full\"\n                        wire:model=\"form.email\"\n                        name=\"email\"\n                        id=\"email\"\n                        placeholder=\"{{ __('crud.users.inputs.email.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.email\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"password\"\n                        >{{ __('crud.users.inputs.password.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.password\n                        class=\"w-full\"\n                        wire:model=\"form.password\"\n                        name=\"password\"\n                        id=\"password\"\n                        placeholder=\"{{ __('crud.users.inputs.password.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.password\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n"
            },
            "item_62": {
                "path": "app/Livewire/Dashboard",
                "name": "UserCreate.php",
                "fullPath": "app/Livewire/Dashboard/UserCreate.php",
                "template": "crud/views/livewire/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 62,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse Livewire\\WithFileUploads;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\Users\\Forms\\CreateForm;\n\nclass UserCreate extends Component\n{\n    use WithFileUploads;\n\n    public CreateForm $form;\n\n    public function mount()\n    {\n    }\n\n    public function save()\n    {\n        $this->authorize('create', User::class);\n\n        $this->validate();\n\n        $user = $this->form->save();\n\n        return redirect()->route('dashboard.users.edit', $user);\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.users.create', []);\n    }\n}\n"
            },
            "item_63": {
                "path": "resources/views/livewire/dashboard/users",
                "name": "edit.blade.php",
                "fullPath": "resources/views/livewire/dashboard/users/edit.blade.php",
                "template": "crud/views/livewire/EditView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 63,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link href=\"{{ route('dashboard.users.index') }}\"\n            >{{ __('crud.users.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Edit {{ __('crud.users.itemTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <x-ui.toast on=\"saved\"> User saved successfully. </x-ui.toast>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Edit {{ __('crud.users.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"name\"\n                        >{{ __('crud.users.inputs.name.label') }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.name\"\n                        name=\"name\"\n                        id=\"name\"\n                        placeholder=\"{{ __('crud.users.inputs.name.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.name\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"email\"\n                        >{{ __('crud.users.inputs.email.label') }}</x-ui.label\n                    >\n                    <x-ui.input.email\n                        class=\"w-full\"\n                        wire:model=\"form.email\"\n                        name=\"email\"\n                        id=\"email\"\n                        placeholder=\"{{ __('crud.users.inputs.email.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.email\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"password\"\n                        >{{ __('crud.users.inputs.password.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.password\n                        class=\"w-full\"\n                        wire:model=\"form.password\"\n                        name=\"password\"\n                        id=\"password\"\n                        placeholder=\"{{ __('crud.users.inputs.password.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.password\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n"
            },
            "item_64": {
                "path": "app/Livewire/Dashboard",
                "name": "UserEdit.php",
                "fullPath": "app/Livewire/Dashboard/UserEdit.php",
                "template": "crud/views/livewire/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 64,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse App\\Models\\User;\nuse Livewire\\Component;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\Users\\Forms\\UpdateForm;\n\nclass UserEdit extends Component\n{\n    public ?User $user = null;\n\n    public UpdateForm $form;\n\n    public function mount(User $user)\n    {\n        $this->authorize('view-any', User::class);\n\n        $this->user = $user;\n\n        $this->form->setUser($user);\n    }\n\n    public function save()\n    {\n        $this->authorize('update', $this->user);\n\n        $this->validate();\n\n        $this->form->save();\n\n        $this->dispatch('saved');\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.users.edit', []);\n    }\n}\n"
            },
            "item_65": {
                "path": "app/Livewire/Dashboard/Users/Forms",
                "name": "CreateForm.php",
                "fullPath": "app/Livewire/Dashboard/Users/Forms/CreateForm.php",
                "template": "crud/views/livewire/CreateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 65,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Users\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\User;\nuse Livewire\\Attributes\\Rule;\nuse Illuminate\\Support\\Facades\\Hash;\n\nclass CreateForm extends Form\n{\n    #[Rule('required|string')]\n    public $name = '';\n\n    #[Rule('required|string|unique:users,email')]\n    public $email = '';\n\n    #[Rule('required|string|min:6')]\n    public $password = '';\n\n    public function save()\n    {\n        $this->validate();\n\n        $this->password = Hash::make($this->password);\n\n        $user = User::create($this->except([]));\n\n        $this->reset();\n\n        return $user;\n    }\n}\n"
            },
            "item_66": {
                "path": "app/Livewire/Dashboard/Users/Forms",
                "name": "UpdateForm.php",
                "fullPath": "app/Livewire/Dashboard/Users/Forms/UpdateForm.php",
                "template": "crud/views/livewire/UpdateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 66,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Users\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\User;\nuse Illuminate\\Validation\\Rule;\nuse Illuminate\\Support\\Facades\\Hash;\n\nclass UpdateForm extends Form\n{\n    public ?User $user;\n\n    public $name = '';\n\n    public $email = '';\n\n    public $password = '';\n\n    public function rules(): array\n    {\n        return [\n            'name' => ['required', 'string'],\n            'email' => [\n                'required',\n                'string',\n                Rule::unique('users', 'email')->ignore($this->user),\n            ],\n            'password' => ['nullable', 'string', 'min:6'],\n        ];\n    }\n\n    public function setUser(User $user)\n    {\n        $this->user = $user;\n\n        $this->name = $user->name;\n        $this->email = $user->email;\n    }\n\n    public function save()\n    {\n        $this->validate();\n\n        $this->password = Hash::make($this->password);\n\n        $this->user->update($this->except(['user']));\n    }\n}\n"
            },
            "item_67": {
                "path": "database/seeders",
                "name": "DatabaseSeeder.php",
                "fullPath": "database/seeders/DatabaseSeeder.php",
                "template": "database/DatabaseSeeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "ignoreConflicts": false,
                "id": 67,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\n// use Illuminate\\Database\\Console\\Seeds\\WithoutModelEvents;\n\nuse App\\Models\\User;\n\nclass DatabaseSeeder extends Seeder\n{\n    /**\n     * Seed the application's database.\n     */\n    public function run(): void\n    {\n        User::factory()\n            ->count(1)\n            ->create([\n                'email' => 'admin@admin.com',\n                'password' => \\Hash::make('admin'),\n            ]);\n\n        $this->call(MembershipSeeder::class);\n        $this->call(TeamSeeder::class);\n        $this->call(TeamInvitationSeeder::class);\n        $this->call(FormulirSeeder::class);\n    }\n}\n",
                "conflictFileName": "o5zQXNXmFrcBY56WNfp7lNah7evVdqVF.json"
            },
            "item_68": {
                "path": "resources/views/components/layouts",
                "name": "app.blade.php",
                "fullPath": "resources/views/components/layouts/app.blade.php",
                "template": "crud/views/livewire/JetstreamLayoutComponent.vemtl",
                "projectId": 1,
                "type": "html",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 68,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<!DOCTYPE html>\r\n<html lang=\"{{ str_replace('_', '-', app()->getLocale()) }}\">\r\n    <head>\r\n        <meta charset=\"utf-8\">\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n        <meta name=\"csrf-token\" content=\"{{ csrf_token() }}\">\r\n\r\n        <title>{{ config('app.name', 'Laravel') }}</title>\r\n\r\n        <!-- Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.bunny.net\">\r\n        <link href=\"https://fonts.bunny.net/css?family=figtree:400,500,600&display=swap\" rel=\"stylesheet\" />\r\n\r\n        <!-- Scripts -->\r\n        @vite(['resources/css/app.css', 'resources/js/app.js'])\r\n    </head>\r\n    <body class=\"font-sans antialiased\">\r\n        <x-banner />\r\n\r\n        <div class=\"min-h-screen bg-gray-100\">\r\n            @livewire('navigation-menu')\r\n\r\n            <!-- Page Heading -->\r\n            @if (isset($header))\r\n                <header class=\"bg-white shadow\">\r\n                    <div class=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\r\n                        {{ $header }}\r\n                    </div>\r\n                </header>\r\n            @endif\r\n\r\n            <!-- Page Content -->\r\n            <main>\r\n                {{ $slot }}\r\n            </main>\r\n        </div>\r\n\r\n        @stack('modals')\r\n    </body>\r\n</html>\r\n"
            },
            "item_69": {
                "path": "/lang/en/",
                "name": "navigation.php",
                "fullPath": "/lang/en//navigation.php",
                "template": "NoTemplate",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 69,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<?php\n\nreturn [\n    'home' => 'Home',\n    'apps' => 'Apps',\n    'users' => 'Users',\n    'formulirs' => 'Formulirs',\n];\n"
            },
            "item_70": {
                "path": "/lang/en/",
                "name": "crud.php",
                "fullPath": "/lang/en//crud.php",
                "template": "NoTemplate",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 70,
                "createdAt": "2024-12-10 00:52:28",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<?php\n\nreturn [\n    'users' => [\n        'itemTitle' => 'User',\n        'collectionTitle' => 'Users',\n        'inputs' => [\n            'name' => [\n                'label' => 'Name',\n                'placeholder' => 'Name',\n            ],\n            'email' => [\n                'label' => 'Email',\n                'placeholder' => 'Email',\n            ],\n            'password' => [\n                'label' => 'Password',\n                'placeholder' => 'Password',\n            ],\n        ],\n    ],\n    'formulirs' => [\n        'itemTitle' => 'Formulir',\n        'collectionTitle' => 'Formulirs',\n        'inputs' => [\n            'name' => [\n                'label' => 'Name',\n                'placeholder' => 'Name',\n            ],\n            'phone' => [\n                'label' => 'Phone',\n                'placeholder' => 'Phone',\n            ],\n            'institution' => [\n                'label' => 'Institution',\n                'placeholder' => 'Institution',\n            ],\n            'domicile' => [\n                'label' => 'Domicile',\n                'placeholder' => 'Domicile',\n            ],\n            'event' => [\n                'label' => 'Event',\n                'placeholder' => 'Event',\n            ],\n            'image' => [\n                'label' => 'Image',\n                'placeholder' => 'Image',\n            ],\n        ],\n    ],\n];\n"
            },
            "item_71": {
                "path": "database/factories",
                "name": "FormulirFactory.php",
                "fullPath": "database/factories/FormulirFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 71,
                "createdAt": "2024-12-10 01:10:41",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Formulir;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass FormulirFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Formulir::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => fake()->name(),\n            'phone' => fake()->phoneNumber(),\n            'institution' => fake()->text(255),\n            'domicile' => fake()->text(255),\n            'event' => 'Flower Bouquet | 18 Dec | 13:00 | IDR 25.000',\n        ];\n    }\n}\n"
            },
            "item_72": {
                "path": "database/seeders",
                "name": "FormulirSeeder.php",
                "fullPath": "database/seeders/FormulirSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 72,
                "createdAt": "2024-12-10 01:10:41",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Formulir;\nuse Illuminate\\Database\\Seeder;\n\nclass FormulirSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Formulir::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_73": {
                "path": "app/Policies",
                "name": "FormulirPolicy.php",
                "fullPath": "app/Policies/FormulirPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 73,
                "createdAt": "2024-12-10 01:10:41",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Formulir;\n\nclass FormulirPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, Formulir $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, Formulir $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, Formulir $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, Formulir $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, Formulir $model): bool\n    {\n        return true;\n    }\n}\n"
            },
            "item_74": {
                "path": "resources/views/livewire/dashboard/formulirs",
                "name": "index.blade.php",
                "fullPath": "resources/views/livewire/dashboard/formulirs/index.blade.php",
                "template": "crud/views/livewire/IndexView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 74,
                "createdAt": "2024-12-10 01:10:41",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >{{ __('crud.formulirs.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"flex justify-between align-top py-4\">\n        <x-ui.input\n            wire:model.live=\"search\"\n            type=\"text\"\n            placeholder=\"Search {{ __('crud.formulirs.collectionTitle') }}...\"\n        />\n\n        @can('create', App\\Models\\Formulir::class)\n        <a wire:navigate href=\"{{ route('dashboard.formulirs.create') }}\">\n            <x-ui.button>New</x-ui.button>\n        </a>\n        @endcan\n    </div>\n\n    {{-- Delete Modal --}}\n    <x-ui.modal.confirm wire:model=\"confirmingDeletion\">\n        <x-slot name=\"title\"> {{ __('Delete') }} </x-slot>\n\n        <x-slot name=\"content\"> {{ __('Are you sure?') }} </x-slot>\n\n        <x-slot name=\"footer\">\n            <x-ui.button\n                wire:click=\"$toggle('confirmingDeletion')\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Cancel') }}\n            </x-ui.button>\n\n            <x-ui.button.danger\n                class=\"ml-3\"\n                wire:click=\"delete({{ $deletingFormulir }})\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Delete') }}\n            </x-ui.button.danger>\n        </x-slot>\n    </x-ui.modal.confirm>\n\n    {{-- Index Table --}}\n    <x-ui.container.table>\n        <x-ui.table>\n            <x-slot name=\"head\">\n                <x-ui.table.header for-crud wire:click=\"sortBy('name')\"\n                    >{{ __('crud.formulirs.inputs.name.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('phone')\"\n                    >{{ __('crud.formulirs.inputs.phone.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('institution')\"\n                    >{{ __('crud.formulirs.inputs.institution.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('domicile')\"\n                    >{{ __('crud.formulirs.inputs.domicile.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('event')\"\n                    >{{ __('crud.formulirs.inputs.event.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('image')\"\n                    >{{ __('crud.formulirs.inputs.image.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.action-header>Actions</x-ui.table.action-header>\n            </x-slot>\n\n            <x-slot name=\"body\">\n                @forelse ($formulirs as $formulir)\n                <x-ui.table.row wire:loading.class.delay=\"opacity-75\">\n                    <x-ui.table.column for-crud\n                        >{{ $formulir->name }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $formulir->phone }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $formulir->institution }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $formulir->domicile }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $formulir->event }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud>\n                        <x-ui.table.image\n                            url=\"{{ asset('storage/' . $formulir->image) }}\"\n                            alt=\"{{ $formulir->image }}\"\n                        />\n                    </x-ui.table.column>\n                    <x-ui.table.action-column>\n                        @can('update', $formulir)\n                        <x-ui.action\n                            wire:navigate\n                            href=\"{{ route('dashboard.formulirs.edit', $formulir) }}\"\n                            >Edit</x-ui.action\n                        >\n                        @endcan @can('delete', $formulir)\n                        <x-ui.action.danger\n                            wire:click=\"confirmDeletion({{ $formulir->id }})\"\n                            >Delete</x-ui.action.danger\n                        >\n                        @endcan\n                    </x-ui.table.action-column>\n                </x-ui.table.row>\n                @empty\n                <x-ui.table.row>\n                    <x-ui.table.column colspan=\"7\"\n                        >No {{ __('crud.formulirs.collectionTitle') }} found.</x-ui.table.column\n                    >\n                </x-ui.table.row>\n                @endforelse\n            </x-slot>\n        </x-ui.table>\n\n        <div class=\"mt-2\">{{ $formulirs->links() }}</div>\n    </x-ui.container.table>\n</div>\n"
            },
            "item_75": {
                "path": "app/Livewire/Dashboard",
                "name": "FormulirIndex.php",
                "fullPath": "app/Livewire/Dashboard/FormulirIndex.php",
                "template": "crud/views/livewire/IndexComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 75,
                "createdAt": "2024-12-10 01:10:41",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse App\\Models\\Formulir;\nuse Livewire\\WithPagination;\n\nclass FormulirIndex extends Component\n{\n    use WithPagination;\n\n    public $search;\n    public $sortField = 'updated_at';\n    public $sortDirection = 'desc';\n\n    public $queryString = ['search', 'sortField', 'sortDirection'];\n\n    public $confirmingDeletion = false;\n    public $deletingFormulir;\n\n    public function updatingSearch()\n    {\n        $this->resetPage();\n    }\n\n    public function confirmDeletion(string $id)\n    {\n        $this->deletingFormulir = $id;\n\n        $this->confirmingDeletion = true;\n    }\n\n    public function delete(Formulir $formulir)\n    {\n        $formulir->delete();\n\n        $this->confirmingDeletion = false;\n    }\n\n    public function sortBy($field)\n    {\n        if ($this->sortField === $field) {\n            $this->sortDirection =\n                $this->sortDirection === 'asc' ? 'desc' : 'asc';\n        } else {\n            $this->sortDirection = 'asc';\n        }\n\n        $this->sortField = $field;\n    }\n\n    public function getRowsProperty()\n    {\n        return $this->rowsQuery->paginate(5);\n    }\n\n    public function getRowsQueryProperty()\n    {\n        return Formulir::query()\n            ->orderBy($this->sortField, $this->sortDirection)\n            ->where('name', 'like', \"%{$this->search}%\");\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.formulirs.index', [\n            'formulirs' => $this->rows,\n        ]);\n    }\n}\n"
            },
            "item_76": {
                "path": "resources/views/livewire/dashboard/formulirs",
                "name": "create.blade.php",
                "fullPath": "resources/views/livewire/dashboard/formulirs/create.blade.php",
                "template": "crud/views/livewire/CreateView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 76,
                "createdAt": "2024-12-10 01:10:41",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link href=\"{{ route('dashboard.formulirs.index') }}\"\n            >{{ __('crud.formulirs.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Create {{ __('crud.formulirs.itemTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Create {{ __('crud.formulirs.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"name\"\n                        >{{ __('crud.formulirs.inputs.name.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.name\"\n                        name=\"name\"\n                        id=\"name\"\n                        placeholder=\"{{ __('crud.formulirs.inputs.name.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.name\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"phone\"\n                        >{{ __('crud.formulirs.inputs.phone.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.phone\"\n                        name=\"phone\"\n                        id=\"phone\"\n                        placeholder=\"{{ __('crud.formulirs.inputs.phone.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.phone\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"institution\"\n                        >{{ __('crud.formulirs.inputs.institution.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.institution\"\n                        name=\"institution\"\n                        id=\"institution\"\n                        placeholder=\"{{ __('crud.formulirs.inputs.institution.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.institution\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"domicile\"\n                        >{{ __('crud.formulirs.inputs.domicile.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.domicile\"\n                        name=\"domicile\"\n                        id=\"domicile\"\n                        placeholder=\"{{ __('crud.formulirs.inputs.domicile.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.domicile\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"event\"\n                        >{{ __('crud.formulirs.inputs.event.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.event\"\n                        class=\"w-full\"\n                        id=\"event\"\n                        name=\"event\"\n                    >\n                        <option value=\"\">Select</option>\n                        <option value=\"Flower Bouquet | 18 Dec | 13:00 | IDR 25.000\">Flower bouquet 18 dec 13 00 idr 25 000</option>\n                        <option value=\"Flower Bouquet | 18 Dec | 14:00 | IDR 25.000\">Flower bouquet 18 dec 14 00 idr 25 000</option>\n                        <option value=\"Lomba Sketsa A4 | 18 Dec | 15:00 | IDR 30.000\">Lomba sketsa a4 18 dec 15 00 idr 30 000</option>\n                        <option value=\"Lomba Poster A3 | 19 Dec | 09:00 | IDR 30.000\">Lomba poster a3 19 dec 09 00 idr 30 000</option>\n                        <option value=\"Mewarnai A | 19 Dec | 13:00 | IDR 30.000\">Mewarnai a 19 dec 13 00 idr 30 000</option>\n                        <option value=\"Mewarnai B | 19 Dec | 15:00 | IDR 30.000\">Mewarnai b 19 dec 15 00 idr 30 000</option>\n                        <option value=\"Painting Ashtray | 20 Dec | 13:00 | IDR 20.000\">Painting ashtray 20 dec 13 00 idr 20 000</option>\n                        <option value=\"Lomba Puisi | 20 Dec | 15:00 | IDR 30.000\">Lomba puisi 20 dec 15 00 idr 30 000</option>\n                        <option value=\"Mirror Decoration | 20 Dec | 15:00 | IDR 30.000\">Mirror decoration 20 dec 15 00 idr 30 000</option>\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"event\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"image\"\n                        >{{ __('crud.formulirs.inputs.image.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.image\n                        :src=\"$form->newImage ? Storage::url($form->newImage) : Storage::url($form->image)\"\n                        wire:model=\"form.newImage\"\n                        x-on:removed=\"$form->deleteImage()\"\n                        class=\"w-full\"\n                        id=\"image\"\n                        name=\"image\"\n                    />\n                    <x-ui.input.error for=\"form.newImage\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n"
            },
            "item_77": {
                "path": "app/Livewire/Dashboard",
                "name": "FormulirCreate.php",
                "fullPath": "app/Livewire/Dashboard/FormulirCreate.php",
                "template": "crud/views/livewire/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 77,
                "createdAt": "2024-12-10 01:10:41",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse Livewire\\WithFileUploads;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\Formulirs\\Forms\\CreateForm;\n\nclass FormulirCreate extends Component\n{\n    use WithFileUploads;\n\n    public CreateForm $form;\n\n    public function mount()\n    {\n    }\n\n    public function save()\n    {\n        $this->authorize('create', Formulir::class);\n\n        $this->validate();\n\n        $formulir = $this->form->save();\n\n        return redirect()->route('dashboard.formulirs.edit', $formulir);\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.formulirs.create', []);\n    }\n}\n"
            },
            "item_78": {
                "path": "resources/views/livewire/dashboard/formulirs",
                "name": "edit.blade.php",
                "fullPath": "resources/views/livewire/dashboard/formulirs/edit.blade.php",
                "template": "crud/views/livewire/EditView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 78,
                "createdAt": "2024-12-10 01:10:41",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link href=\"{{ route('dashboard.formulirs.index') }}\"\n            >{{ __('crud.formulirs.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Edit {{ __('crud.formulirs.itemTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <x-ui.toast on=\"saved\"> Formulir saved successfully. </x-ui.toast>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Edit {{ __('crud.formulirs.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"name\"\n                        >{{ __('crud.formulirs.inputs.name.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.name\"\n                        name=\"name\"\n                        id=\"name\"\n                        placeholder=\"{{ __('crud.formulirs.inputs.name.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.name\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"phone\"\n                        >{{ __('crud.formulirs.inputs.phone.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.phone\"\n                        name=\"phone\"\n                        id=\"phone\"\n                        placeholder=\"{{ __('crud.formulirs.inputs.phone.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.phone\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"institution\"\n                        >{{ __('crud.formulirs.inputs.institution.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.institution\"\n                        name=\"institution\"\n                        id=\"institution\"\n                        placeholder=\"{{ __('crud.formulirs.inputs.institution.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.institution\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"domicile\"\n                        >{{ __('crud.formulirs.inputs.domicile.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.domicile\"\n                        name=\"domicile\"\n                        id=\"domicile\"\n                        placeholder=\"{{ __('crud.formulirs.inputs.domicile.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.domicile\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"event\"\n                        >{{ __('crud.formulirs.inputs.event.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.event\"\n                        class=\"w-full\"\n                        id=\"event\"\n                        name=\"event\"\n                    >\n                        <option value=\"\">Select</option>\n                        <option value=\"Flower Bouquet | 18 Dec | 13:00 | IDR 25.000\">Flower bouquet 18 dec 13 00 idr 25 000</option>\n                        <option value=\"Flower Bouquet | 18 Dec | 14:00 | IDR 25.000\">Flower bouquet 18 dec 14 00 idr 25 000</option>\n                        <option value=\"Lomba Sketsa A4 | 18 Dec | 15:00 | IDR 30.000\">Lomba sketsa a4 18 dec 15 00 idr 30 000</option>\n                        <option value=\"Lomba Poster A3 | 19 Dec | 09:00 | IDR 30.000\">Lomba poster a3 19 dec 09 00 idr 30 000</option>\n                        <option value=\"Mewarnai A | 19 Dec | 13:00 | IDR 30.000\">Mewarnai a 19 dec 13 00 idr 30 000</option>\n                        <option value=\"Mewarnai B | 19 Dec | 15:00 | IDR 30.000\">Mewarnai b 19 dec 15 00 idr 30 000</option>\n                        <option value=\"Painting Ashtray | 20 Dec | 13:00 | IDR 20.000\">Painting ashtray 20 dec 13 00 idr 20 000</option>\n                        <option value=\"Lomba Puisi | 20 Dec | 15:00 | IDR 30.000\">Lomba puisi 20 dec 15 00 idr 30 000</option>\n                        <option value=\"Mirror Decoration | 20 Dec | 15:00 | IDR 30.000\">Mirror decoration 20 dec 15 00 idr 30 000</option>\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"event\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"image\"\n                        >{{ __('crud.formulirs.inputs.image.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.image\n                        :src=\"$form->newImage ? Storage::url($form->newImage) : Storage::url($form->image)\"\n                        wire:model=\"form.newImage\"\n                        x-on:removed=\"$form->deleteImage()\"\n                        class=\"w-full\"\n                        id=\"image\"\n                        name=\"image\"\n                    />\n                    <x-ui.input.error for=\"form.newImage\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n"
            },
            "item_79": {
                "path": "app/Livewire/Dashboard",
                "name": "FormulirEdit.php",
                "fullPath": "app/Livewire/Dashboard/FormulirEdit.php",
                "template": "crud/views/livewire/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 79,
                "createdAt": "2024-12-10 01:10:41",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse App\\Models\\Formulir;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\Formulirs\\Forms\\UpdateForm;\n\nclass FormulirEdit extends Component\n{\n    public ?Formulir $formulir = null;\n\n    public UpdateForm $form;\n\n    public function mount(Formulir $formulir)\n    {\n        $this->authorize('view-any', Formulir::class);\n\n        $this->formulir = $formulir;\n\n        $this->form->setFormulir($formulir);\n    }\n\n    public function save()\n    {\n        $this->authorize('update', $this->formulir);\n\n        $this->validate();\n\n        $this->form->save();\n\n        $this->dispatch('saved');\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.formulirs.edit', []);\n    }\n}\n"
            },
            "item_80": {
                "path": "app/Livewire/Dashboard/Formulirs/Forms",
                "name": "CreateForm.php",
                "fullPath": "app/Livewire/Dashboard/Formulirs/Forms/CreateForm.php",
                "template": "crud/views/livewire/CreateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 80,
                "createdAt": "2024-12-10 01:10:41",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Formulirs\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\Formulir;\nuse Livewire\\Attributes\\Rule;\n\nclass CreateForm extends Form\n{\n    #[Rule('required|string')]\n    public $name = '';\n\n    #[Rule('required|string')]\n    public $phone = '';\n\n    #[Rule('required|string')]\n    public $institution = '';\n\n    #[Rule('required|string')]\n    public $domicile = '';\n\n    #[Rule('required')]\n    public $event = '';\n\n    #[Rule('nullable|image|max:5024')]\n    public $image = '';\n\n    public $newImage = null;\n\n    public function save()\n    {\n        $this->validate();\n\n        $this->processImage();\n\n        $formulir = Formulir::create($this->except(['newImage']));\n\n        $this->reset();\n\n        return $formulir;\n    }\n\n    public function processImage()\n    {\n        if (empty($this->newImage)) {\n            return;\n        }\n\n        $this->image = $this->newImage->store('formulirs', 'public');\n    }\n\n    public function deleteImage()\n    {\n        $this->newImage = null;\n    }\n}\n"
            },
            "item_81": {
                "path": "app/Livewire/Dashboard/Formulirs/Forms",
                "name": "UpdateForm.php",
                "fullPath": "app/Livewire/Dashboard/Formulirs/Forms/UpdateForm.php",
                "template": "crud/views/livewire/UpdateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 81,
                "createdAt": "2024-12-10 01:10:41",
                "updatedAt": "2024-12-10 01:10:43",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Formulirs\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\Formulir;\nuse Illuminate\\Validation\\Rule;\n\nclass UpdateForm extends Form\n{\n    public ?Formulir $formulir;\n\n    public $name = '';\n\n    public $phone = '';\n\n    public $institution = '';\n\n    public $domicile = '';\n\n    public $event = '';\n\n    public $image = '';\n\n    public $newImage = null;\n\n    public function rules(): array\n    {\n        return [\n            'name' => ['required', 'string'],\n            'phone' => ['required', 'string'],\n            'institution' => ['required', 'string'],\n            'domicile' => ['required', 'string'],\n            'event' => ['required'],\n            'image' => ['nullable', 'image', 'max:5024'],\n        ];\n    }\n\n    public function setFormulir(Formulir $formulir)\n    {\n        $this->formulir = $formulir;\n\n        $this->name = $formulir->name;\n        $this->phone = $formulir->phone;\n        $this->institution = $formulir->institution;\n        $this->domicile = $formulir->domicile;\n        $this->event = $formulir->event;\n        $this->image = $formulir->image;\n    }\n\n    public function save()\n    {\n        $this->validate();\n\n        $this->processImage();\n\n        $this->formulir->update($this->except(['formulir', 'newImage']));\n    }\n\n    public function processImage()\n    {\n        if (empty($this->newImage)) {\n            return;\n        }\n\n        $this->formulir->image = $this->newImage->store('formulirs', 'public');\n    }\n\n    public function deleteImage()\n    {\n        $this->newImage = null;\n    }\n}\n"
            }
        },
        "cruds": {
            "item_1": {
                "type": "Livewire",
                "name": "User",
                "plural": "Users",
                "sectionId": 1,
                "modelId": 4,
                "tableId": 13,
                "projectId": 1,
                "basePath": "Users",
                "settings": {
                    "itemName": "user",
                    "collectionName": "users",
                    "itemTitle": "crud.users.itemTitle",
                    "collectionTitle": "crud.users.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\Dashboard",
                "livewireFormsNamespace": "App\\Livewire\\Dashboard\\Users\\Forms",
                "livewireIndexComponentName": "UserIndex",
                "livewireShowComponentName": "UserShow",
                "livewireCreateComponentName": "UserCreate",
                "livewireEditComponentName": "UserEdit",
                "defaultSearchColumnId": 72,
                "defaultSortColumnId": 83,
                "defaultSortDirection": "desc",
                "id": 1,
                "createdAt": "2024-12-10 00:52:23",
                "updatedAt": "2024-12-10 00:52:23"
            },
            "__tableData": {
                "count": 2,
                "lastPrimaryKey": 2,
                "index": {
                    "1": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                1
                            ],
                            "inputs.crudId": [
                                1,
                                2,
                                3
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                2
                            ],
                            "inputs.crudId": [
                                5,
                                6,
                                7,
                                8,
                                9,
                                10
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "type": "Livewire",
                "name": "Formulir",
                "plural": "Formulirs",
                "sectionId": 1,
                "modelId": 7,
                "tableId": 15,
                "projectId": 1,
                "basePath": "Formulirs",
                "settings": {
                    "itemName": "formulir",
                    "collectionName": "formulirs",
                    "itemTitle": "crud.formulirs.itemTitle",
                    "collectionTitle": "crud.formulirs.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\Dashboard",
                "livewireFormsNamespace": "App\\Livewire\\Dashboard\\Formulirs\\Forms",
                "livewireIndexComponentName": "FormulirIndex",
                "livewireShowComponentName": "FormulirShow",
                "livewireCreateComponentName": "FormulirCreate",
                "livewireEditComponentName": "FormulirEdit",
                "defaultSearchColumnId": 94,
                "defaultSortColumnId": 101,
                "defaultSortDirection": "desc",
                "id": 2,
                "createdAt": "2024-12-10 01:09:31",
                "updatedAt": "2024-12-10 01:09:31"
            }
        },
        "crud_panels": {
            "item_1": {
                "title": "Main",
                "crudId": 1,
                "order": 0,
                "id": 1,
                "createdAt": "2024-12-10 00:52:23",
                "updatedAt": "2024-12-10 00:52:23"
            },
            "__tableData": {
                "count": 2,
                "lastPrimaryKey": 2,
                "index": {
                    "1": {
                        "hasMany": {
                            "inputs.panelId": [
                                1,
                                2,
                                3
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "inputs.panelId": [
                                5,
                                6,
                                7,
                                8,
                                9,
                                10
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "title": "Main",
                "crudId": 2,
                "order": 0,
                "id": 2,
                "createdAt": "2024-12-10 01:09:31",
                "updatedAt": "2024-12-10 01:09:31"
            }
        },
        "inputs": {
            "item_1": {
                "crudId": 1,
                "columnId": 72,
                "name": "name",
                "label": "crud.users.inputs.name.label",
                "placeholder": "crud.users.inputs.name.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 1,
                "id": 1,
                "createdAt": "2024-12-10 00:52:23",
                "updatedAt": "2024-12-10 00:52:44",
                "order": 1
            },
            "__tableData": {
                "count": 9,
                "lastPrimaryKey": 10,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "5": {
                        "hasMany": {}
                    },
                    "6": {
                        "hasMany": {}
                    },
                    "7": {
                        "hasMany": {}
                    },
                    "8": {
                        "hasMany": {}
                    },
                    "9": {
                        "hasMany": {}
                    },
                    "10": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "crudId": 1,
                "columnId": 73,
                "name": "email",
                "label": "crud.users.inputs.email.label",
                "placeholder": "crud.users.inputs.email.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "email",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    },
                    {
                        "type": "textual",
                        "value": "unique:users,email"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    },
                    {
                        "type": "textual",
                        "value": "unique:users,email"
                    }
                ],
                "panelId": 1,
                "id": 2,
                "createdAt": "2024-12-10 00:52:23",
                "updatedAt": "2024-12-10 00:52:44",
                "order": 2
            },
            "item_3": {
                "crudId": 1,
                "columnId": 75,
                "name": "password",
                "label": "crud.users.inputs.password.label",
                "placeholder": "crud.users.inputs.password.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": false,
                "showOnIndex": false,
                "type": "password",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    },
                    {
                        "type": "textual",
                        "value": "min:6"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    },
                    {
                        "type": "textual",
                        "value": "min:6"
                    }
                ],
                "panelId": 1,
                "id": 3,
                "createdAt": "2024-12-10 00:52:23",
                "updatedAt": "2024-12-10 00:52:44",
                "order": 3
            },
            "item_5": {
                "crudId": 2,
                "columnId": 94,
                "name": "name",
                "label": "crud.formulirs.inputs.name.label",
                "placeholder": "crud.formulirs.inputs.name.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 2,
                "id": 5,
                "createdAt": "2024-12-10 01:09:31",
                "updatedAt": "2024-12-10 01:09:31"
            },
            "item_6": {
                "crudId": 2,
                "columnId": 95,
                "name": "phone",
                "label": "crud.formulirs.inputs.phone.label",
                "placeholder": "crud.formulirs.inputs.phone.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 2,
                "id": 6,
                "createdAt": "2024-12-10 01:09:31",
                "updatedAt": "2024-12-10 01:09:31"
            },
            "item_7": {
                "crudId": 2,
                "columnId": 96,
                "name": "institution",
                "label": "crud.formulirs.inputs.institution.label",
                "placeholder": "crud.formulirs.inputs.institution.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 2,
                "id": 7,
                "createdAt": "2024-12-10 01:09:31",
                "updatedAt": "2024-12-10 01:09:31"
            },
            "item_8": {
                "crudId": 2,
                "columnId": 97,
                "name": "domicile",
                "label": "crud.formulirs.inputs.domicile.label",
                "placeholder": "crud.formulirs.inputs.domicile.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 2,
                "id": 8,
                "createdAt": "2024-12-10 01:09:31",
                "updatedAt": "2024-12-10 01:09:31"
            },
            "item_9": {
                "crudId": 2,
                "columnId": 98,
                "name": "event",
                "label": "crud.formulirs.inputs.event.label",
                "placeholder": "crud.formulirs.inputs.event.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [
                    {
                        "label": "Flower bouquet 18 dec 13 00 idr 25 000",
                        "value": "Flower Bouquet | 18 Dec | 13:00 | IDR 25.000"
                    },
                    {
                        "label": "Flower bouquet 18 dec 14 00 idr 25 000",
                        "value": "Flower Bouquet | 18 Dec | 14:00 | IDR 25.000"
                    },
                    {
                        "label": "Lomba sketsa a4 18 dec 15 00 idr 30 000",
                        "value": "Lomba Sketsa A4 | 18 Dec | 15:00 | IDR 30.000"
                    },
                    {
                        "label": "Lomba poster a3 19 dec 09 00 idr 30 000",
                        "value": "Lomba Poster A3 | 19 Dec | 09:00 | IDR 30.000"
                    },
                    {
                        "label": "Mewarnai a 19 dec 13 00 idr 30 000",
                        "value": "Mewarnai A | 19 Dec | 13:00 | IDR 30.000"
                    },
                    {
                        "label": "Mewarnai b 19 dec 15 00 idr 30 000",
                        "value": "Mewarnai B | 19 Dec | 15:00 | IDR 30.000"
                    },
                    {
                        "label": "Painting ashtray 20 dec 13 00 idr 20 000",
                        "value": "Painting Ashtray | 20 Dec | 13:00 | IDR 20.000"
                    },
                    {
                        "label": "Lomba puisi 20 dec 15 00 idr 30 000",
                        "value": "Lomba Puisi | 20 Dec | 15:00 | IDR 30.000"
                    },
                    {
                        "label": "Mirror decoration 20 dec 15 00 idr 30 000",
                        "value": "Mirror Decoration | 20 Dec | 15:00 | IDR 30.000"
                    }
                ],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "select",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 2,
                "id": 9,
                "createdAt": "2024-12-10 01:09:31",
                "updatedAt": "2024-12-10 01:09:31"
            },
            "item_10": {
                "crudId": 2,
                "columnId": 99,
                "name": "image",
                "label": "crud.formulirs.inputs.image.label",
                "placeholder": "crud.formulirs.inputs.image.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "image",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "image"
                    },
                    {
                        "type": "textual",
                        "value": "max:5024"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "image"
                    },
                    {
                        "type": "textual",
                        "value": "max:5024"
                    }
                ],
                "panelId": 2,
                "id": 10,
                "createdAt": "2024-12-10 01:09:31",
                "updatedAt": "2024-12-10 01:10:21"
            }
        },
        "routes": {
            "item_1": {
                "name": "users.index",
                "tag": "index",
                "method": "get",
                "type": "route",
                "path": "/users",
                "routableId": 1,
                "routableType": "Crud",
                "projectId": 1,
                "id": 1,
                "createdAt": "2024-12-10 00:52:23",
                "updatedAt": "2024-12-10 00:52:23"
            },
            "__tableData": {
                "count": 6,
                "lastPrimaryKey": 6,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    },
                    "5": {
                        "hasMany": {}
                    },
                    "6": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "name": "users.create",
                "tag": "create",
                "method": "get",
                "type": "route",
                "path": "/users/create",
                "routableId": 1,
                "routableType": "Crud",
                "projectId": 1,
                "id": 2,
                "createdAt": "2024-12-10 00:52:23",
                "updatedAt": "2024-12-10 00:52:23"
            },
            "item_3": {
                "name": "users.edit",
                "tag": "edit",
                "method": "get",
                "type": "route",
                "path": "/users/{user}",
                "routableId": 1,
                "routableType": "Crud",
                "projectId": 1,
                "id": 3,
                "createdAt": "2024-12-10 00:52:23",
                "updatedAt": "2024-12-10 00:52:23"
            },
            "item_4": {
                "name": "formulirs.index",
                "tag": "index",
                "method": "get",
                "type": "route",
                "path": "/formulirs",
                "routableId": 2,
                "routableType": "Crud",
                "projectId": 1,
                "id": 4,
                "createdAt": "2024-12-10 01:09:31",
                "updatedAt": "2024-12-10 01:09:31"
            },
            "item_5": {
                "name": "formulirs.create",
                "tag": "create",
                "method": "get",
                "type": "route",
                "path": "/formulirs/create",
                "routableId": 2,
                "routableType": "Crud",
                "projectId": 1,
                "id": 5,
                "createdAt": "2024-12-10 01:09:31",
                "updatedAt": "2024-12-10 01:09:31"
            },
            "item_6": {
                "name": "formulirs.edit",
                "tag": "edit",
                "method": "get",
                "type": "route",
                "path": "/formulirs/{formulir}",
                "routableId": 2,
                "routableType": "Crud",
                "projectId": 1,
                "id": 6,
                "createdAt": "2024-12-10 01:09:31",
                "updatedAt": "2024-12-10 01:09:31"
            }
        }
    },
    "tablesNames": [
        "projects",
        "tables",
        "columns",
        "indices",
        "index_column",
        "models",
        "fillable_model_column",
        "casts_model_column",
        "relationships",
        "hidden_model_column",
        "app_sections",
        "schema_sections",
        "navs",
        "renderable_files",
        "cruds",
        "crud_panels",
        "inputs",
        "routes"
    ]
}